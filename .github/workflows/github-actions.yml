name: GitHub RAVEN test
run-name: ${{ github.actor }} is testing out RAVEN
on: [push, pull_request]

concurrency:
  # Here the group is defined by the head_ref of the PR
  group: ${{ github.head_ref }}
  # Here we specify that we'll cancel any "in progress" workflow of the same group. Thus if we push, ammend a commit and push
  # again the previous workflow will be cancelled, thus saving us github action build minutes and avoid any conflicts
  cancel-in-progress: true

jobs:
  Test-RAVEN-Linux:
    runs-on: ubuntu-latest
    # runs-on: ubuntu-22.04
    steps:
      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          channels: conda-forge, defaults
          activate-environment: raven_libraries
          use-only-tar-bz2: true  # IMPORTANT: This needs to be set for caching to work properly!
          auto-update-conda: true
          auto-activate-base: true

      - name: Job Information
        run: |
          echo " The job was automatically triggered by a ${{ github.event_name }} event."
          echo " This job is now running on a ${{ runner.os }} server"
          echo " The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Fetch and Branch
        uses: actions/checkout@v3

      - name: Install Plugins
        run: |
          pwd
          python3 ./scripts/install_plugins.py -a

      - name: Set Python Environment and Build Raven
        run: |
          ./scripts/establish_conda_env.sh --install
          ./build_raven

      - name: Test RAVEN
        # if: always()
        # continue-on-error: true # numba library cause autoarma failed for latest ubuntu
        run: |
          ./run_tests --library-report
          ./run_tests -j4 --raven

      - name: Test Plugins
        continue-on-error: true
        run: |
          ./run_tests -j4 --plugins

  Test-RAVEN-macOS:
    runs-on: macos-latest
    # runs-on: macos-14
    steps:
      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          channels: conda-forge, defaults
          activate-environment: raven_libraries
          use-only-tar-bz2: False
          auto-update-conda: true
          auto-activate-base: true

      - name: Job Information
        run: |
          echo " The job was automatically triggered by a ${{ github.event_name }} event."
          echo " This job is now running on a ${{ runner.os }} server"
          echo " The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Fetch and Branch
        uses: actions/checkout@v3

      - name: Install Plugins
        run: |
          pwd
          python3 ./scripts/install_plugins.py -a

      - name: Set Python Environment and Build Raven
        run: |
          ./scripts/establish_conda_env.sh --install
          ./build_raven

      - name: Test RAVEN
        # if: always()
        continue-on-error: true
        run: |
          ./run_tests --library-report
          ./run_tests -j4 --raven

      - name: Test Plugins
        continue-on-error: true
        run: |
          ./run_tests -j4 --plugins

  Test-RAVEN-Windows:
    runs-on: windows-latest
    steps:
      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          channels: conda-forge, defaults
          activate-environment: raven_libraries
          use-only-tar-bz2: true
          auto-update-conda: true
          auto-activate-base: true

      - name: Job Information
        run: |
          echo " The job was automatically triggered by a ${{ github.event_name }} event."
          echo " This job is now running on a ${{ runner.os }} server"
          echo " The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Fetch and Branch
        uses: actions/checkout@v3

      - name: Install Plugins
        run: |
          pwd
          python ./scripts/install_plugins.py -a

      - name: Set Python Environment and Build Raven
        run: |
          bash ./scripts/establish_conda_env.sh --install  --conda-defs $HOME/Miniconda3/etc/profile.d/conda.sh
          bash ./build_raven

      - name: Test RAVEN
        # if: always()
        run: |
          bash ./run_tests --library-report
          bash ./run_tests -j4 --raven

      - name: Test Plugins
        continue-on-error: true
        run: |
          bash ./run_tests -j4 --plugins
