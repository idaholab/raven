<?xml version="1.0"?>
<xsd:schema version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema"  elementFormDefault="qualified">
<!-- *********************************************************************** -->
<!--                            Outstream Manager                            -->
<!-- *********************************************************************** -->
  <xsd:complexType name="OutStreamData">
    <xsd:sequence>
      <xsd:element name="Print" type="PrintData" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="Plot"  type="PlotData"  minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="verbosity" type="verbosityAttr" default="all"/>
  </xsd:complexType>

  <xsd:complexType name="PrintData">
    <xsd:all>
      <xsd:element name="type"   type="xsd:string" minOccurs="1" default="csv"/>
      <xsd:element name="source" type="xsd:string" minOccurs="1"/>
      <xsd:element name="what"   type="xsd:string" minOccurs="0"/>
      <xsd:element name="target"   type="xsd:string" minOccurs="0"/>
      <xsd:element name="filename" type="xsd:string" minOccurs="0"/>
      <xsd:element name="clusterLabel" type="xsd:string" minOccurs="0"/>
    </xsd:all>
    <xsd:attribute name="name"      type="xsd:string" use="required"/>
    <xsd:attribute name="dir"       type="xsd:string" />
    <xsd:attribute name="verbosity" type="verbosityAttr"/>
  </xsd:complexType>

  <xsd:complexType name="actionType">
    <xsd:all>
      <xsd:element name="how"                 type="imgList" minOccurs="0"/>
      <xsd:element name="range"               type="rangeType" minOccurs="0"/>
      <xsd:element name="title"               type="titleType" minOccurs="0"/>
      <xsd:element name="labelFormat"         type="labelFormatType" minOccurs="0"/>
      <xsd:element name="figureProperties"    type="figurePropertiesType" minOccurs="0"/>
      <!-- xsd:element name="range"               type="rangeType" minOccurs="0"/ -->
      <xsd:element name="camera"              type="cameraType" minOccurs="0"/>
      <xsd:element name="scale"               type="scaleType" minOccurs="0"/>
      <xsd:element name="addText"             type="titleType" minOccurs="0"/>
      <xsd:element name="autoscale"           type="autoscaleType" minOccurs="0"/>
      <xsd:element name="horizontalLine"      type="horizontalLineType" minOccurs="0"/>
      <xsd:element name="verticalLine"        type="verticalLineType" minOccurs="0"/>
      <xsd:element name="horizontalRectangle" type="rectangleType" minOccurs="0"/>
      <xsd:element name="verticalRectangle"   type="rectangleType" minOccurs="0"/>
      <xsd:element name="axesBox"             type="toggleType" minOccurs="0"/>
      <xsd:element name="axisProperties"      type="xsd:string" minOccurs="0"/>
      <xsd:element name="grid"                type="plotGridType" minOccurs="0"/>
      <xsd:element name="colorbar"            type="toggleType"  minOccurs="0"/>
      <xsd:element name="axis"                type="toggleType"  minOccurs="0"/>
      <!-- This is not in the user manual, this is a custom feature from matplotlib -->
      <xsd:element name="arrow"               type="arrowType" minOccurs="0"/>
    </xsd:all>
  </xsd:complexType>

  <xsd:complexType name="PlotData">
    <xsd:all>
      <xsd:element name="kwargs" type="kwargsType" minOccurs="0"/>
      <xsd:element name="actions"      type="actionType" />
      <xsd:element name="plotSettings" type="plotSettingsType" />
      <xsd:element name="filename"     type="xsd:string" minOccurs="0"/>
    </xsd:all>
    <xsd:attribute name="name"        type="xsd:string" use="required"/>
    <xsd:attribute name="interactive" type="RavenBool" default="false"/>
    <xsd:attribute name="overwrite"   type="RavenBool" default="false"/>
    <xsd:attribute name="dir"         type="xsd:string" />
    <!-- Does this exist? -->
    <xsd:attribute name="verbosity"   type="xsd:string"/>
  </xsd:complexType>

  <xsd:simpleType name="toggleType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="on"/>
      <xsd:enumeration value="off" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="imgFileType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="screen"/>
      <xsd:enumeration value="pdf"/>
      <xsd:enumeration value="png"/>
      <xsd:enumeration value="eps"/>
      <xsd:enumeration value="pgf"/>
      <xsd:enumeration value="ps"/>
      <xsd:enumeration value="gif"/>
      <xsd:enumeration value="svg"/>
      <xsd:enumeration value="jpeg"/>
      <xsd:enumeration value="raw"/>
      <xsd:enumeration value="bmp"/>
      <xsd:enumeration value="tiff"/>
      <xsd:enumeration value="svgz"/>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="imgList">
    <xsd:list itemType="imgFileType"/>
  </xsd:simpleType>

  <xsd:complexType name="kwargsType">
    <xsd:sequence>
      <xsd:any processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="titleType">
    <xsd:all>
      <xsd:element name="text"   type="xsd:string"/>
      <xsd:element name="kwargs" type="kwargsType" minOccurs="0"/>
    </xsd:all>
  </xsd:complexType>

  <xsd:complexType name="labelFormatType">
    <xsd:all>
      <xsd:element name="axis" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="x"/>
            <xsd:enumeration value="y"/>
            <xsd:enumeration value="z"/>
            <xsd:enumeration value="both"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="style" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="sci" />
            <xsd:enumeration value="scientific" />
            <xsd:enumeration value="plain" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <!-- How do we do a tuple in XSD? An integer list will be unbounded -->
      <!-- xsd:element name="scilimits" type="intList" minOccurs="0"/ -->
      <xsd:element name="scilimits" type="xsd:string" minOccurs="0"/>
      <xsd:element name="useOffset" minOccurs="0">
        <xsd:simpleType>
          <xsd:union memberTypes="xsd:float RavenBool" />
        </xsd:simpleType>
      </xsd:element>
    </xsd:all>
  </xsd:complexType>

  <xsd:complexType name="figurePropertiesType">
    <xsd:all>
      <!--XSD wants to see the figure size as a space delimited list of floats, whereas matplotlib wants it as a a comma separated list of floats.-->
      <xsd:element name="figsize"   type="xsd:string"  minOccurs="0"/>
      <xsd:element name="dpi"       type="xsd:integer" minOccurs="0"/>
      <xsd:element name="facecolor" type="xsd:string"  minOccurs="0"/>
      <xsd:element name="edgecolor" type="xsd:string"  minOccurs="0"/>
      <xsd:element name="linewidth" type="xsd:float"   minOccurs="0"/>
      <xsd:element name="frameon"   type="RavenBool" minOccurs="0"/>
    </xsd:all>
  </xsd:complexType>

  <xsd:complexType name="rangeType">
    <xsd:all>
      <xsd:element name="xmin" type="xsd:float" minOccurs="0"/>
      <xsd:element name="xmax" type="xsd:float" minOccurs="0"/>
      <xsd:element name="ymin" type="xsd:float" minOccurs="0"/>
      <xsd:element name="ymax" type="xsd:float" minOccurs="0"/>
      <xsd:element name="zmin" type="xsd:float" minOccurs="0"/>
      <xsd:element name="zmax" type="xsd:float" minOccurs="0"/>
    </xsd:all>
  </xsd:complexType>

  <xsd:complexType name="cameraType">
    <xsd:all>
      <xsd:element name="elevation" type="xsd:float" minOccurs="0"/>
      <xsd:element name="azimuth"   type="xsd:float" minOccurs="0"/>
    </xsd:all>
  </xsd:complexType>

  <xsd:simpleType name="axisScaleType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="linear"/>
      <xsd:enumeration value="log" />
      <xsd:enumeration value="symlog" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:complexType name="scaleType">
    <xsd:all>
      <xsd:element name="xscale" type="axisScaleType" minOccurs="0"/>
      <xsd:element name="yscale" type="axisScaleType" minOccurs="0"/>
      <xsd:element name="zscale" type="axisScaleType" minOccurs="0"/>
    </xsd:all>
  </xsd:complexType>

  <xsd:complexType name="autoscaleType">
    <xsd:all>
      <xsd:element name="enable" type="RavenBool" minOccurs="0"/>
      <xsd:element name="aixs"   type="xsd:string"  minOccurs="0"/>
      <xsd:element name="tight"  type="RavenBool" minOccurs="0"/>
    </xsd:all>
  </xsd:complexType>

  <xsd:complexType name="horizontalLineType">
    <xsd:all>
      <xsd:element name="y"      type="xsd:float"  minOccurs="0"/>
      <xsd:element name="xmin"   type="xsd:float"  minOccurs="0"/>
      <xsd:element name="xmax"   type="xsd:float"  minOccurs="0"/>
      <xsd:element name="kwargs" type="kwargsType" minOccurs="0"/>
    </xsd:all>
  </xsd:complexType>

  <xsd:complexType name="verticalLineType">
    <xsd:all>
      <xsd:element name="x"      type="xsd:float"  minOccurs="0"/>
      <xsd:element name="ymin"   type="xsd:float"  minOccurs="0"/>
      <xsd:element name="ymax"   type="xsd:float"  minOccurs="0"/>
      <xsd:element name="kwargs" type="kwargsType" minOccurs="0"/>
    </xsd:all>
  </xsd:complexType>

  <xsd:complexType name="rectangleType">
    <xsd:all>
      <xsd:element name="ymin"   type="xsd:float"  minOccurs="0"/>
      <xsd:element name="ymax"   type="xsd:float"  minOccurs="0"/>
      <xsd:element name="xmin"   type="xsd:float"  minOccurs="0"/>
      <xsd:element name="xmax"   type="xsd:float"  minOccurs="0"/>
      <xsd:element name="kwargs" type="kwargsType" minOccurs="0"/>
    </xsd:all>
  </xsd:complexType>

  <xsd:complexType name="plotGridType" mixed="true">
    <xsd:all>
      <xsd:element name="b"      type="RavenBool"  minOccurs="0"/>
      <xsd:element name="which"  type="xsd:float"  minOccurs="0"/>
      <xsd:element name="axis"   type="xsd:float"  minOccurs="0"/>
      <xsd:element name="kwargs" type="kwargsType" minOccurs="0"/>
    </xsd:all>
  </xsd:complexType>

  <!-- This is not in the user manual, this is a custom feature from matplotlib -->
  <xsd:complexType name="arrowType">
    <xsd:sequence>
      <xsd:any processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:simpleType name="histType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="bar"/>
      <xsd:enumeration value="barstacked" />
      <xsd:enumeration value="step" />
      <xsd:enumeration value="stepfilled" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="alignType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="left"/>
      <xsd:enumeration value="mid" />
      <xsd:enumeration value="right" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="orientationType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="horizontal"/>
      <xsd:enumeration value="vertical" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="fractionType">
    <xsd:restriction base="xsd:float">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="1"/>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="plotType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="scatter"/>
      <xsd:enumeration value="line" />
      <xsd:enumeration value="wireframe" />
      <xsd:enumeration value="histogram" />
      <xsd:enumeration value="stem" />
      <xsd:enumeration value="step" />
      <xsd:enumeration value="pseudocolor" />
      <xsd:enumeration value="contour" />
      <xsd:enumeration value="filledContour" />
      <xsd:enumeration value="surface" />
      <xsd:enumeration value="tri-surface" />
      <xsd:enumeration value="contour3D" />
      <xsd:enumeration value="filledContour3D" />
      <xsd:enumeration value="dataMining" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:complexType name="plotSettingsType">
      <xsd:sequence>
          <xsd:element name="gridSpace" type="intList" minOccurs="0" maxOccurs="1" />
          <xsd:element name="plot"      type="plotBlock" minOccurs="0" maxOccurs="unbounded"/>
          <xsd:element name="kwargs"    type="kwargsType" minOccurs="0"/>
          <xsd:element name="xlabel"    type="xsd:string" minOccurs="0"/>
          <xsd:element name="ylabel"    type="xsd:string" minOccurs="0"/>
          <xsd:element name="zlabel"    type="xsd:string" minOccurs="0"/>
          <xsd:element name="legend"    type="kwargsType" minOccurs="0"/>
      </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="gridLocationType">
      <xsd:all>
          <xsd:element name="x" type="intList" minOccurs="1"/>
          <xsd:element name="y" type="intList" minOccurs="1"/>
      </xsd:all>
  </xsd:complexType>

  <xsd:complexType name="plotBlock">
    <xsd:all>
      <xsd:element name="type" type="plotType" minOccurs="0"/>
      <xsd:element name="x" type="xsd:string" minOccurs="1" />
      <!-- Not required in a 1D histogram -->
      <xsd:element name="y" type="xsd:string" minOccurs="0" />
      <!-- Required only if dim=3 -->
      <xsd:element name="z"      type="xsd:string" minOccurs="0"/>
      <!-- can be a color or a vector? -->
      <xsd:element name="xlabel"    type="xsd:string" minOccurs="0"/>
      <xsd:element name="ylabel"    type="xsd:string" minOccurs="0"/>
      <xsd:element name="zlabel"    type="xsd:string" minOccurs="0"/>
      <xsd:element name="colorMap"  type="xsd:string" minOccurs="0"/>
      <xsd:element name="gridLocation" type="gridLocationType" minOccurs="0"/>
      <xsd:element name="range"     type="rangeType" minOccurs="0"/>
      <xsd:element name="kwargs" type="kwargsType" minOccurs="0"/>
      <!-- type=scatter -->
      <xsd:element name="s" type="xsd:integer" minOccurs="0"/>
      <xsd:element name="c" type="xsd:string" minOccurs="0"/>
      <xsd:element name="marker" type="xsd:string" minOccurs="0"/>
      <xsd:element name="alpha" type="xsd:string" minOccurs="0"/>
      <xsd:element name="linewidths" type="xsd:string" minOccurs="0"/>
      <!-- type=line -->
      <xsd:element name="interpolationType" type="xsd:string" minOccurs="0"/>
      <xsd:element name="interpPointsX" type="xsd:integer" minOccurs="0"/>
      <xsd:element name="interpPointsY" type="xsd:integer" minOccurs="0"/>
      <!-- type=histogram -->
      <!-- bins can be an integer or a list of values -->
      <xsd:element name="bins" type="floatList" minOccurs="0"/>
      <xsd:element name="normed" type="RavenBool" minOccurs="0"/>
      <xsd:element name="weights" type="floatList" minOccurs="0"/>
      <xsd:element name="cumulative" type="RavenBool" minOccurs="0"/>
      <xsd:element name="histtype" type="histType" minOccurs="0"/>
      <xsd:element name="align" type="alignType" minOccurs="0"/>
      <xsd:element name="orientation" type="orientationType" minOccurs="0"/>
      <xsd:element name="rwidth" type="fractionType" minOccurs="0"/>
      <xsd:element name="log" type="RavenBool" minOccurs="0"/>
      <xsd:element name="color" type="xsd:string" minOccurs="0"/>
      <xsd:element name="stacked" type="RavenBool" minOccurs="0"/>
      <!-- type=stem -->
      <xsd:element name="linefmt" type="xsd:string" minOccurs="0"/>
      <xsd:element name="markerfmt" type="xsd:string" minOccurs="0"/>
      <xsd:element name="basefmt" type="xsd:string" minOccurs="0"/>
      <!-- type=step -->
      <xsd:element name="where" type="xsd:string" minOccurs="0"/>
      <!-- type=pseudocolor, see line -->
      <!-- type=contour,filledContour -->
      <xsd:element name="numberBins" type="xsd:integer" minOccurs="0"/>
      <xsd:element name="cmap" type="xsd:string" minOccurs="0"/>
      <!-- type=surface -->
      <xsd:element name="rstride" type="xsd:integer" minOccurs="0"/>
      <xsd:element name="cstride" type="xsd:integer" minOccurs="0"/>
      <xsd:element name="antialiased" type="RavenBool" minOccurs="0"/>
      <xsd:element name="linewidth" type="xsd:integer" minOccurs="0"/>
      <!-- type=wireframe, similar to above -->
      <!-- type=tri-surface -->
      <xsd:element name="shade" type="RavenBool" minOccurs="0"/>
      <!-- type=contour3D, all are specified above -->
      <!-- Added for the Datamining Plots -->
      <xsd:element name="SKLtype"        type="xsd:string" minOccurs="0"/>
      <xsd:element name="noClusters"     type="xsd:integer" minOccurs="0"/>
      <xsd:element name="clusterLabels"  type="xsd:string" minOccurs="0"/>
      <xsd:element name="mixtureLabels"  type="xsd:string" minOccurs="0"/>
    </xsd:all>
  </xsd:complexType>
</xsd:schema>
