<!--
Structure:
<root>
  <install-method>
    ...
  </install method>
  <next-install-method> etc
</root>
Note all install methods after "main" take
  Instructions:

 add library:                <library>pinned.version.number</library>
 add with no pinned version: <library/>
 remove a library:           <library>remove</library>
 action for limited OS:      <library os='windows'>...
 action for certain machine  <library machine='arm64'>...
 add library from forge:     <library source='forge'>...
 optional:                   <library optional='True'>...
 skip run/install check:     <library skip_check='True'>...
 add pip library with extra parameters:
                             <ray source="pip" pip_extra="[tune]">1.9</ray>
   the above will use pip_extra to translate into a command:
     pip install ray[tune]==1.9.*
   which installs ray and the dependencies for Ray Tune

 default OS is "all"
 default source is "conda" meaning main conda repo
 default optional is "false"

 For more information about the command line arguments to library_handler.sh, see that module.
 Also try
       `python library_handler.sh -h` and
       `python library_handler.sh conda -h`

 end reading flow
-->
<dependencies>
  <main>
    <h5py/>
    <numpy>1.22</numpy>
    <scipy>1.9</scipy>
    <scikit-learn>1.0</scikit-learn>
    <pandas/>
    <!-- Note most versions of xarray work, but some (such as 0.20) don't -->
    <xarray>2023</xarray>
    <netcdf4 source="pip">1.6</netcdf4>
    <matplotlib>3.5</matplotlib>
    <statsmodels>0.13</statsmodels>
    <cloudpickle>2.2</cloudpickle>
    <tensorflow source="pip">2.13</tensorflow>
    <grpcio source="pip" />
    <!-- conda is really slow on windows if the version is not specified.-->
    <python skip_check='True' os='windows'>3.8</python>
    <python skip_check='True' os='mac,linux'>3</python>
    <hdf5 skip_check='True'/>
    <swig skip_check='True'/>
    <pylint/>
    <coverage/>
    <lxml/>
    <psutil/>
    <pip/>
    <importlib_metadata/>
    <pyside2 optional='True'/>
    <nomkl os='linux' skip_check='True'/>
    <numexpr os='linux'/>
    <cmake skip_check='True' optional='True'/>
    <dask source="pip" pip_extra="[complete]"/>
    <ray source="pip" pip_extra="[default]">2.6</ray>
    <!-- redis is needed by ray, but on windows, this seems to need to be explicitly stated -->
    <redis source="pip" os='windows'/>
    <imageio source="pip">2.22</imageio>
    <smt machine='x86_64'/> <!-- not available on macos arm64 -->
    <line_profiler optional='True'/>
    <!-- <ete3 optional='True'/> -->
    <pywavelets optional='True'>1.1</pywavelets>
    <python-sensors source="pip"/>
    <numdifftools source="pip">0.9</numdifftools>
    <fmpy optional='True'/>
    <xmlschema source="pip"/>
    <pyomo optional='True'>6.4</pyomo>
    <glpk skip_check='True' optional='True'/>
    <ipopt skip_check='True' optional='True'/>
    <cyipopt optional='True'/>
    <pyomo-extensions source="pyomo" skip_check='True' optional='True'/>
    <setuptools/>
  </main>
  <alternate name="pip">
    <hdf5>remove</hdf5>
    <swig>remove</swig>
    <pip>remove</pip>
    <python>remove</python>
    <nomkl>remove</nomkl>
    <numexpr>remove</numexpr>
  </alternate>
  <alternate name="none">
    <hdf5>remove</hdf5>
    <swig>remove</swig>
    <pip>remove</pip>
    <python>remove</python>
    <nomkl>remove</nomkl>
    <numexpr>remove</numexpr>
  </alternate>
</dependencies>
