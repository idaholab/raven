<?xml version="1.0" ?>
<Simulation verbosity="silent">
  <TestInfo>
    <name>framework/MCMC.AdaptiveMetropolis</name>
    <author>wangc</author>
    <created>2020-12-20</created>
    <classesTested>MCMC.Metropolis</classesTested>
    <description>
      Test the Markov Chain Monte Carlo algorithm: Adaptive Metropolis Sampling
      A 2-D multivariate normal distribution is used as the likelihood function.
      mean: [5, 5], cov=[[1, 0.9], [0.9, 1]]
      Both input parameters have the standard normal distribution as their prior distribution.
      The proposal distributions for the input variables are also standard normal distribution.
      ``TargetEvaluation'' is used to collect the inputs and outputs from the likelihood model.
      ``SolutionExport'' is used to store the posterior values for the input variables, i.e. ``xin'' and ``yin''
    </description>
  </TestInfo>

  <RunInfo>
    <WorkingDir>amh</WorkingDir>
    <Sequence>amh, print</Sequence>
    <batchSize>1</batchSize>
    <internalParallel>False</internalParallel>
  </RunInfo>

  <Distributions>
    <Normal name="normal">
      <mean>0</mean>
      <sigma>1</sigma>
    </Normal>
  </Distributions>

  <Models>
    <ExternalModel ModuleToLoad="../likelihoods/likelihood_amh" name="likelihood" subType="">
      <variables>xin, yin, zout</variables>
    </ExternalModel>
  </Models>

  <Samplers>
    <AdaptiveMetropolis name="AdaptiveMetropolis">
      <samplerInit>
        <limit>1000</limit>
        <initialSeed>070419</initialSeed>
        <burnIn>500</burnIn>
      </samplerInit>
      <likelihood log="False">zout</likelihood>
      <variable name="xin">
        <distribution>normal</distribution>
        <initial>2</initial>
      </variable>
      <variable name="yin">
        <distribution>normal</distribution>
        <initial>2</initial>
      </variable>
      <TargetEvaluation class="DataObjects" type="PointSet">outSet</TargetEvaluation>
    </AdaptiveMetropolis>
  </Samplers>

  <Steps>
    <MultiRun name="amh">
      <Input class="DataObjects" type="PointSet">inputHolder</Input>
      <Model class="Models" type="ExternalModel">likelihood</Model>
      <Sampler class="Samplers" type="AdaptiveMetropolis">AdaptiveMetropolis</Sampler>
      <SolutionExport class="DataObjects" type="PointSet">out_export</SolutionExport>
      <Output class="DataObjects" type="PointSet">outSet</Output>
    </MultiRun>
    <IOStep name="print">
      <Input class="DataObjects" type="PointSet">out_export</Input>
      <Input class="DataObjects" type="PointSet">outSet</Input>
      <Output class="OutStreams" type="Print">dumpExport</Output>
      <Output class="OutStreams" type="Print">dumpOut</Output>
    </IOStep>
  </Steps>

  <OutStreams>
    <Print name="dumpOut">
      <type>csv</type>
      <source>outSet</source>
      <what>input, output</what>
    </Print>
    <Print name="dumpExport">
      <type>csv</type>
      <source>out_export</source>
      <what>input, output</what>
    </Print>
  </OutStreams>

  <DataObjects>
    <PointSet name="inputHolder">
      <Input>xin, yin</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>

    <PointSet name="outSet">
      <Input>xin, yin</Input>
      <Output>zout</Output>
    </PointSet>

    <PointSet name="out_export">
      <Input>traceID</Input>
      <Output>xin, yin, LogPosterior, AcceptRate</Output>
    </PointSet>
  </DataObjects>
</Simulation>
