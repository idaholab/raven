<?xml version="1.0" ?>
<Simulation>
  <RunInfo>
    <WorkingDir>gridPCACdf</WorkingDir>
    <Sequence>gridRun,Dump</Sequence>
    <batchSize>1</batchSize>
  </RunInfo>
  <TestInfo>
    <name>framework/pca_grid/gridPCACdf</name>
    <author>wangc</author>
    <created>2015-10-28</created>
    <classesTested>Samplers.Grid</classesTested>
    <description>
      Tests the CDF-generated Grid sampler combined with input reductions via PCA method,
      using multivariate normal distributions.
    </description>
  </TestInfo>

  <Files>
    <Input name="lorentzAttractor_noK.py" type="">lorentzAttractor_noK.py</Input>
  </Files>

  <Models>
    <ExternalModel ModuleToLoad="lorentzAttractor_noK" name="PythonModule" subType="">
      <variables>sigma,rho,beta,x,y,z,time,x0,y0,z0</variables>
    </ExternalModel>
  </Models>

  <Distributions>
    <MultivariateNormal method="pca" name="MultivariateNormalPCA">
      <transformation>
        <rank>3</rank>
      </transformation>
      <mu>0.0 1.0 2.0</mu>
      <covariance type="abs">
            1.0       0.6      -0.4
            0.6       1.0      0.2
            -0.4      0.2      0.8
        </covariance>
    </MultivariateNormal>
  </Distributions>

  <Samplers>
    <Grid name="myGrid">
      <variable name="x1">
        <distribution dim="1">MultivariateNormalPCA</distribution>
        <grid construction="custom" type="CDF">
            3.167124183311986334e-05
            1.028488312711138379e-02
            2.638310233953918282e-01
            8.537450609080571295e-01
            9.968983970672826711e-01
        </grid>
      </variable>
      <variable name="y1">
        <distribution dim="2">MultivariateNormalPCA</distribution>
        <grid construction="custom" type="CDF">
            3.167124183311986334e-05
            1.028488312711138379e-02
            2.638310233953918282e-01
            8.537450609080571295e-01
            9.968983970672826711e-01
        </grid>
      </variable>
      <variable name="z1">
        <distribution dim="3">MultivariateNormalPCA</distribution>
        <grid construction="custom" type="CDF">
            3.167124183311986334e-05
            1.028488312711138379e-02
            2.638310233953918282e-01
            8.537450609080571295e-01
            9.968983970672826711e-01
        </grid>
      </variable>
      <variablesTransformation distribution="MultivariateNormalPCA">
        <latentVariables>x1,y1,z1</latentVariables>
        <manifestVariables>x0,y0,z0</manifestVariables>
        <method>pca</method>
      </variablesTransformation>
    </Grid>
  </Samplers>

  <Steps>
    <MultiRun name="gridRun">
      <Input class="DataObjects" type="PointSet">inputPlaceHolder</Input>
      <Model class="Models" type="ExternalModel">PythonModule</Model>
      <Sampler class="Samplers" type="MonteCarlo">myGrid</Sampler>
      <Output class="DataObjects" type="PointSet">testPrintPointSet</Output>
    </MultiRun>
    <IOStep name="Dump">
      <Input class="DataObjects" type="PointSet">testPrintPointSet</Input>
      <Output class="OutStreams" type="Print">testPrintPointSet_dump</Output>
    </IOStep>
  </Steps>

  <OutStreams>
    <Print name="testPrintPointSet_dump">
      <type>csv</type>
      <source>testPrintPointSet</source>
      <what>Input|x1,Input|y1,Input|z1,Input|x0,Input|y0,Input|z0,Output|x,Output|y,Output|z,Input|PointProbability,Input|ProbabilityWeight</what>
    </Print>
  </OutStreams>

  <DataObjects>
    <PointSet name="testPrintPointSet">
      <Input>x0,y0,z0,x1,y1,z1</Input>
      <Output>x,y,z</Output>
    </PointSet>
    <PointSet name="inputPlaceHolder">
      <Input>x0,y0,z0</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
  </DataObjects>

</Simulation>
