<?xml version="1.0" ?>
<Simulation verbosity="debug">
  <TestInfo>
    <name>framework/Databases.HDF5selective</name>
    <author>talbpaul</author>
    <created>2017-07-06</created>
    <classesTested>Databases.HDF5</classesTested>
    <description>
       Tests the ability for HDF5 databases to selectively store data by defining variable blocks.
       Without the selectivity, the resulting HDF5 is 220 KB (all.hdf5).
       With selectivity, the resulting HDF5 is 187 KB (sine.hdf5).
    </description>
    <revisions>
        <revision author="alfoa" date="2019-03-01">Modified test location</revision>
    </revisions>
    <!--We should find a better way to test the contents of the HDF5, as loading back into a CSV filters through
         the DataObject as well, but we currently don't have a way to test the file sizes against each other.

         For now, I'll make this an error test that loads "square" from "all.hdf5" but errors trying to load
         "square" from "sine.hdf5".-->
  </TestInfo>
  <RunInfo>
    <WorkingDir>HDF5_selective</WorkingDir>
    <Sequence>sample,load,print</Sequence>
  </RunInfo>

  <Models>
    <ExternalModel ModuleToLoad="output_generator" name="PythonModule" subType="">
      <variables>sine,square,cosine,time,var1,var2</variables>
    </ExternalModel>
  </Models>

  <Distributions>
    <Uniform name="zeroToOne">
      <lowerBound>0.0</lowerBound>
      <upperBound>1.0</upperBound>
    </Uniform>
    <Uniform name="oneToTwo">
      <lowerBound>1.0</lowerBound>
      <upperBound>2.0</upperBound>
    </Uniform>
  </Distributions>

  <Samplers>
    <Grid name="RAVENGrid">
      <variable name="var1">
        <distribution>zeroToOne</distribution>
        <grid construction="equal" steps="7" type="CDF">0.15  0.9</grid>
      </variable>
      <variable name="var2">
        <distribution>oneToTwo</distribution>
        <grid construction="equal" steps="7" type="CDF">0.15  0.9</grid>
      </variable>
    </Grid>
  </Samplers>

  <Steps>
    <MultiRun name="sample">
      <Input class="DataObjects" type="PointSet">inputHolder</Input>
      <Model class="Models" type="ExternalModel">PythonModule</Model>
      <Sampler class="Samplers" type="Grid">RAVENGrid</Sampler>
      <Output class="Databases" type="HDF5">sine</Output>
      <Output class="Databases" type="HDF5">all</Output>
    </MultiRun>
    <IOStep name="load">
      <Input class="Databases" type="HDF5">sine</Input>
      <Input class="Databases" type="HDF5">all</Input>
      <Output class="DataObjects" type="HistorySet">dataWorks</Output>
      <Output class="DataObjects" type="HistorySet">dataErrs</Output>
    </IOStep>
    <IOStep name="print">
      <Input class="DataObjects" type="HistorySet">dataWorks</Input>
      <Input class="DataObjects" type="HistorySet">dataErrs</Input>
      <Output class="OutStreams" type="Print">hasSquare</Output>
      <Output class="OutStreams" type="Print">noSquare</Output>
    </IOStep>
  </Steps>

  <Databases>
    <HDF5 name="sine" readMode="overwrite" directory=".">
      <variables>var1,var2,time,sine</variables>
    </HDF5>
    <HDF5 name="all" readMode="overwrite" directory="."/>
  </Databases>

  <DataObjects>
    <PointSet name="inputHolder">
      <Input>var1, var2</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <HistorySet name="dataWorks">
      <Input>var1, var2</Input>
      <Output>time,sine,square</Output>
    </HistorySet>
    <HistorySet name="dataErrs">
      <Input>var1, var2</Input>
      <Output>time,sine,square</Output>
    </HistorySet>
  </DataObjects>

  <OutStreams>
    <Print name="hasSquare">
      <type>csv</type>
      <source>dataWorks</source>
    </Print>
    <Print name="noSquare">
      <type>csv</type>
      <source>dataErrs</source>
    </Print>
  </OutStreams>
</Simulation>
