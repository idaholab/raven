<?xml version="1.0" ?>
<Simulation>
  <TestInfo>
    <name>framework.ND_test_MC_MVN</name>
    <author>mandd</author>
    <created>2015-04-15</created>
    <classesTested>Distributions.MultivariateNormal, Samplers.MonteCarlo</classesTested>
    <description>
       This test is aimed to check the capability of RAVEN to handle MultivariateNormal probability density functions (distributions), when
       a MonteCarlo sampling strategy is performed.
    </description>
    <revisions>
      <revision author="alfoa" date="2015-06-18">Changed Name of all DataObjects</revision>
      <revision author="wangc" date="2015-07-02">nd multivariate distribution improvement</revision>
      <revision author="maljdan" date="2016-04-06">Updating test cases to reflect the changes to the user input.</revision>
      <revision author="alfoa" date="2017-01-21">Adding this test description.</revision>
      <revision author="wangc" date="2017-12-20">convert test to use the new DataObjects with the new structure of basic statistic</revision>
    </revisions>
  </TestInfo>

  <RunInfo>
    <WorkingDir>ND_test_MC_MVN</WorkingDir>
    <Sequence>FirstMRun</Sequence>
    <batchSize>1</batchSize>
  </RunInfo>

  <Files>
    <Input name="lorentzAttractor_noK.py" type="">lorentzAttractor_noK.py</Input>
    <Input name="covMatrix.txt" type="">covMatrix.txt</Input>
  </Files>

  <Models>
    <ExternalModel ModuleToLoad="lorentzAttractor_noK" name="PythonModule" subType="">
      <variables>sigma,rho,beta,x,y,z,time,x0,y0,z0</variables>
    </ExternalModel>
    <PostProcessor name="CorrelationTest" subType="BasicStatistics">
      <skewness prefix="skew">x0,y0</skewness>
      <variationCoefficient prefix="vc">x0,y0</variationCoefficient>
      <percentile prefix="percentile">x0,y0</percentile>
      <expectedValue prefix="mean">x0,y0</expectedValue>
      <kurtosis prefix="kurt">x0,y0</kurtosis>
      <median prefix="median">x0,y0</median>
      <maximum prefix="max">x0,y0</maximum>
      <minimum prefix="min">x0,y0</minimum>
      <samples prefix="samp">x0,y0</samples>
      <variance prefix="var">x0,y0</variance>
      <sigma prefix="sigma">x0,y0</sigma>
      <NormalizedSensitivity prefix="nsen">
        <targets>x0,y0</targets>
        <features>x0,y0</features>
      </NormalizedSensitivity>
      <sensitivity prefix="sen">
        <targets>x0,y0</targets>
        <features>x0,y0</features>
      </sensitivity>
      <pearson prefix="pear">
        <targets>x0,y0</targets>
        <features>x0,y0</features>
      </pearson>
      <covariance prefix="cov">
        <targets>x0,y0</targets>
        <features>x0,y0</features>
      </covariance>
      <VarianceDependentSensitivity prefix="vsen">
        <targets>x0,y0</targets>
        <features>x0,y0</features>
      </VarianceDependentSensitivity>
    </PostProcessor>
  </Models>

  <Distributions>
    <MultivariateNormal method="spline" name="MultivariateNormal_test">
      <mu>0.0 60.0</mu>
      <covariance>
            1.0 0.8
            0.8 1.0
        </covariance>
    </MultivariateNormal>
  </Distributions>

  <Samplers>
    <MonteCarlo name="MC_external">
      <samplerInit>
        <limit>1</limit>
        <initialSeed>123</initialSeed>
      </samplerInit>
      <variable name="x0">
        <distribution dim="1">MultivariateNormal_test</distribution>
      </variable>
      <variable name="y0,z0">
        <distribution dim="2">MultivariateNormal_test</distribution>
      </variable>
    </MonteCarlo>
  </Samplers>

  <Steps>
    <MultiRun name="FirstMRun">
      <Input class="DataObjects" type="PointSet">inputPlaceHolder</Input>
      <Model class="Models" type="ExternalModel">PythonModule</Model>
      <Sampler class="Samplers" type="MonteCarlo">MC_external</Sampler>
      <Output class="DataObjects" type="PointSet">testPrintPointSet</Output>
      <Output class="OutStreams" type="Print">testPrintPointSet_dump</Output>
    </MultiRun>
    <PostProcess name="PP">
      <Input class="DataObjects" type="PointSet">testPrintPointSet</Input>
      <Model class="Models" type="PostProcessor">CorrelationTest</Model>
      <Output class="DataObjects" type="PointSet">CorrelationTest_basicStatPP</Output>
      <Output class="OutStreams" type="Print">CorrelationTest_basicStatPP_dump</Output>
    </PostProcess>
  </Steps>

  <OutStreams>
    <Print name="testPrintPointSet_dump">
      <type>csv</type>
      <source>testPrintPointSet</source>
      <what>input,output</what>
    </Print>
    <Print name="CorrelationTest_basicStatPP_dump">
      <type>csv</type>
      <source>CorrelationTest_basicStatPP</source>
    </Print>
  </OutStreams>

  <DataObjects>
    <PointSet name="testPrintPointSet">
      <Input>y0,x0,z0</Input>
      <Output>y,x,z</Output>
    </PointSet>
    <PointSet name="inputPlaceHolder">
      <Input>x0,y0,z0</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <PointSet name="CorrelationTest_basicStatPP">
      <Output>CorrelationTest_vars</Output>
    </PointSet>
  </DataObjects>

  <VariableGroups>
    <Group name="CorrelationTest_vars">skew_x0,
                 skew_y0,
                 vc_x0,
                 vc_y0,
                 percentile_5_x0,
                 percentile_95_x0,
                 percentile_5_y0,
                 percentile_95_y0,
                 mean_x0,
                 mean_y0,
                 kurt_x0,
                 kurt_y0,
                 median_x0,
                 median_y0,
                 max_x0,
                 max_y0,
                 min_x0,
                 min_y0,
                 samp_x0,
                 samp_y0,
                 var_x0,
                 var_y0,
                 sigma_x0,
                 sigma_y0,
                 nsen_x0_x0,
                 nsen_x0_y0,
                 nsen_y0_x0,
                 nsen_y0_y0,
                 sen_x0_x0,
                 sen_x0_y0,
                 sen_y0_x0,
                 sen_y0_y0,
                 pear_x0_x0,
                 pear_x0_y0,
                 pear_y0_x0,
                 pear_y0_y0,
                 cov_x0_x0,
                 cov_x0_y0,
                 cov_y0_x0,
                 cov_y0_y0,
                 vsen_x0_x0,
                 vsen_x0_y0,
                 vsen_y0_x0,
                 vsen_y0_y0</Group>
  </VariableGroups>

</Simulation>
