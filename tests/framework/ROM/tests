[Tests]
  [./timeDepRom]
    type  = 'RavenFramework'
    input = 'test_t_rom.xml'
    output = 't_rom/PrintHistorySet_model.xml t_rom/PrintHistorySet_rom.xml'
    csv = 't_rom/PrintHistorySet_rom_0.csv t_rom/PrintHistorySet_rom_1.csv t_rom/PrintHistorySet_rom_2.csv t_rom/PrintHistorySet_rom_3.csv t_rom/PrintHistorySet_rom_4.csv t_rom/PrintHistorySet_rom_5.csv t_rom/PrintHistorySet_rom_6.csv t_rom/PrintHistorySet_rom_7.csv'
  [../]

  [./timeDepGaussPoly]
    type  = 'RavenFramework'
    input = 'test_time_dep_scgpc.xml'
    output = 'scgpc/train_data.xml'
    csv = 'scgpc/train_data_0.csv scgpc/train_data_1.csv scgpc/train_data_2.csv scgpc/train_data_3.csv scgpc/train_data_4.csv'
    UnorderedXml = 'scgpc/trom_dump.xml'
  [../]

  [./verifyGaussPolyRom]
    # tests that the ROM constructed produces the same outputs as the original model
    #   - this test is analytic and uses the "projectile.py" model to determine x, y, and r based on x0, y0, and time
    #   - it is documented in the analytic tests manual
    type  = 'RavenFramework'
    input = 'verify_time_scgpc.xml'
    csv = 'scgpc/model_data_0.csv scgpc/model_data_4.csv scgpc/model_data_8.csv scgpc/rom_data_0.csv scgpc/rom_data_4.csv scgpc/rom_data_8.csv'
    prereq = timeDepGaussPoly
  [../]

  [./SKL_time]
    # NOTE when in conflict with dataobject-rework branch, accept ALL dataobject-rework instead and delete this comment.
    type  = 'RavenFramework'
    input = 'skl_timedep.xml'
    csv = 'TimeDepSKL/innerHS_0.csv TimeDepSKL/innerHS_1.csv TimeDepSKL/innerHS_2.csv'
  [../]

[]
