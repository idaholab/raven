<?xml version="1.0"?>
<Simulation verbosity="silent">
  <TestInfo>
    <name>framework/ROM/TimeSeries/DMD.DMDC</name>
    <author>haoyuwang</author>
    <created>2020-07-27</created>
    <classesTested>SupervisedLearning.DynamicModeDecomposition.DynamicModeDecompositionControl</classesTested>
    <description>
       This test is aimed to check the mechanics of the DMDC ROM using the standard SVD-based
       algorithm.
       In addition, it tests the capability for the user to export the ROM info in an XML output
       file (requirement).
    </description>
    <revisions>
      <revision author="alfoa" date="2018-04-25">Adding this test description.</revision>
      <revision author="alfoa" date="2018-10-01">This test is a requirement test now.</revision>
      <revision author="talbpaul" date="2019-01-09">moving from ROM-files to ROM-dataobjects</revision>
	  <revision author="haoyuwang" date="2020-06-17">Changing the DMD to DMDC test</revision>
	  <revision author="haoyuwang" date="2020-07-27">Adding C matrix Calculation and return final X vector</revision>
    </revisions>
    <requirements>unknown</requirements>
  </TestInfo>

  <RunInfo>
    <WorkingDir>DMDC_RefGov</WorkingDir>
    <Sequence>
             readTrainData,
			 DMDCTrain,
             pickleRom,
             stats,
             writeOut
    </Sequence>
    <batchSize>1</batchSize>
  </RunInfo>

  <Files>
    <!--  we load a synthesized data with 1 time, 1 actuation(u), 3 state(x) and 2 output(y) -->
	<!-- Note: Adjacent rows should have constant time interval for DMDC -->
    <Input name="TrainDataFile">../SES_22_TUYX_Selected.csv</Input>
    <Input name="ROMpk" type="">ROMpk</Input>
  </Files>

  <Models>
    <ROM name="DMDrom" subType="DMDC">
	  <Target>Time,y1,y2</Target>
	  <!-- If Target only contains Time, Calculate A and B only -->
	  <!-- If Target contains y(s) beside Time, Calculate A, B and C -->
      <Features>u1,x1,x2,x3</Features>
	  <!-- Features include all the u(s) and x(s) -->
      <Actuators>u1</Actuators>
	  <pivotParameter>Time</pivotParameter>
      
      <rankSVD>-1</rankSVD>
	  <!-- rankSVD: -1 = No truncation; 0 = optimized truncation; pos. int = truncation level -->
	  <SubtractNormUXY>True</SubtractNormUXY>
	  <!-- SubtractNormUXY: True = will subtract the initial values from U,X,Y -->
    </ROM>
  </Models>

  <Steps>
    <IOStep name="readTrainData">
      <Input class="Files" type="">TrainDataFile</Input>
      <Output class="DataObjects" type="PointSet">TrainData</Output>
    </IOStep>
	<RomTrainer name="DMDCTrain">
      <Input class="DataObjects" type="PointSet">TrainData</Input>
      <Output class="Models" type="ROM">DMDrom</Output>
    </RomTrainer>
    <IOStep name="pickleRom">
      <Input class="Models" type="ROM">DMDrom</Input>
      <Output class="Files" type="">ROMpk</Output>
    </IOStep>
    <IOStep name="stats">
      <Input class="Models" type="ROM">DMDrom</Input>
      <Output class="DataObjects" type="DataSet">rom_stats</Output>
    </IOStep>
    <IOStep name="writeOut" pauseAtEnd="True">
      <Input class="DataObjects" type="DataSet">rom_stats</Input>
      <Output class="OutStreams" type="Print">DMDcCxCoeff</Output>
    </IOStep>
  </Steps>

  <OutStreams>
    <Print name="DMDcCxCoeff">
      <type>csv</type>
      <source>rom_stats</source>
    </Print>	
  </OutStreams>

  <DataObjects>
    <PointSet name="TrainData">
      <Input>Time</Input>
      <Output>u1,y1,y2,x1,x2,x3</Output>
    </PointSet>
    <DataSet name="rom_stats"/>
  </DataObjects>

</Simulation>
