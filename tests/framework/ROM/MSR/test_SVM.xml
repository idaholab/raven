<?xml version="1.0" ?>
<Simulation verbosity="silent">
  <TestInfo>
    <name>framework/ROM/MSR.SVM</name>
    <author>maljdan</author>
    <created>2015-10-06</created>
    <classesTested>SupervisedLearning.MSR</classesTested>
    <description>
       An example of using the Morse-Smale regression reduced order model with
       a support vector machine.

       Note, all of the tests in MSR operate on a 2D input domain with
       the goal of fitting a single Gaussian bump. The input dimensions are
       of largely different scales and one dimension is off-centered from the
       origin to ensure that normalization is being handled correctly.
    </description>
    <revisions>
      <revision author="maljdan" date="2015-10-21">    Converting AMSR test files using the provided conversion script.</revision>
      <revision author="talbpaul" date="2016-02-08">    first update, looking for more failing tests to add</revision>
      <revision author="maljdan" date="2016-02-10">    Adding functionality to allow a user to specify a filename for an Outstream object that is potentially different than its variable name in the RAVEN input file. Adjusting test cases to exercise this functionality.</revision>
      <revision author="maljdan" date="2016-02-10">    Using custom sampler blocks for the MSR-SVM tests.</revision>
      <revision author="maljdan" date="2016-04-06">    Updating test cases to reflect the changes to the user input.</revision>
      <revision author="maljdan" date="2017-01-19">Adding this test description.</revision>
    </revisions>
  </TestInfo>
  <RunInfo>
    <WorkingDir>data</WorkingDir>
    <Sequence>
      sample,
      train,
      resample
    </Sequence>
  </RunInfo>

  <Models>
    <ExternalModel ModuleToLoad="../testFunction" name="foo" subType="">
      <variables>X,Y,Z</variables>
    </ExternalModel>
    <ROM name="modelUnderTest" subType="MSR">
      <Features>X,Y</Features>
      <Target>Z</Target>
      <partitionPredictor>svm</partitionPredictor>
      <simplification>0.04</simplification>
    </ROM>
  </Models>

  <ExternalXML node="Distributions" xmlToLoad="distributions.xml"/>
  <Samplers>
    <MonteCarlo name="mcSampler">
      <samplerInit>
        <!--The SVM implementation has a bit of uncontrollable randomness that
            prevents uniform behavior across machines, so we will use more
            training data to counteract the effects of the randomness imposed
            by the cross-validation of the SVM which generates the probability
            information that exhibits the non-deterministic behavior. -->
        <limit>800</limit>
        <initialSeed>888</initialSeed>
      </samplerInit>
      <variable name="X">
        <distribution>smallUniformDist</distribution>
      </variable>
      <variable name="Y">
        <distribution>largeUniformDist</distribution>
      </variable>
    </MonteCarlo>
    <Grid name="gridSampler">
      <!-- Try to place the grid samples away from the boundary in order to
           reduce the chance of misclassification for this test case -->
      <variable name="X">
        <distribution>smallUniformDist</distribution>
        <grid construction="equal" steps="9" type="value">2 2.9</grid>
      </variable>
      <variable name="Y">
        <distribution>largeUniformDist</distribution>
        <grid construction="equal" steps="10" type="value">-1000 1000</grid>
      </variable>
    </Grid>
  </Samplers>

  <ExternalXML node="Steps" xmlToLoad="steps.xml"/>
  <OutStreams>
    <!-- A csv file containing the output of the example -->
    <Print name="outData">
      <type>csv</type>
      <source>outData</source>
      <what>input,output</what>
      <filename>outDataSVM</filename>
    </Print>
  </OutStreams>

  <ExternalXML node="DataObjects" xmlToLoad="dataObjects.xml"/>
</Simulation>
