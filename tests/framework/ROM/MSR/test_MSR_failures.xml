<?xml version="1.0" ?>
<Simulation verbosity="silent">
  <TestInfo>
    <name>topology_MSR_failures</name>
    <author>maljdan</author>
    <created>2015-10-06</created>
    <classesTested>SupervisedLearning.MSR</classesTested>
    <description>
       This test input will exercise the MSR class's ability to handle errors.
       This enumerates most of the ways bad input can be put into the MSR.
       On each case a message would be generated and the test would exit, so
       this test does not actually run at the moment since it would require
       commenting out several blocks of code. However, it remains useful
       nonetheless for enumerating possible errors.

       Note, all of the tests in MSR operate on a 2D input domain with
       the goal of fitting a single Gaussian bump. The input dimensions are
       of largely different scales and one dimension is off-centered from the
       origin to ensure that normalization is being handled correctly.
    </description>
    <revisions>
      <revision author="talbpaul" date="2016-02-08">    first update, looking for more failing tests to add</revision>
      <revision author="maljdan" date="2016-02-10">    Adding functionality to allow a user to specify a filename for an Outstream object that is potentially different than its variable name in the RAVEN input file. Adjusting test cases to exercise this functionality.</revision>
      <revision author="maljdan" date="2016-04-06">    Updating test cases to reflect the changes to the user input.</revision>
      <revision author="maljdan" date="2017-01-19">Adding this test description.</revision>
    </revisions>
  </TestInfo>
  <RunInfo>
    <WorkingDir>data</WorkingDir>
    <Sequence>
      sample,
      train
    </Sequence>
  </RunInfo>

  <Models>
    <ExternalModel ModuleToLoad="./testFunction" name="foo" subType="">
      <variables>X,Y,Z</variables>
    </ExternalModel>
    <!-- Test all of the ways a user can screw up the input fields -->
    <ROM name="invalidGraph" subType="MSR">
      <Features>X,Y</Features>
      <Target>Z</Target>
      <graph>invalid</graph>
    </ROM>
    <ROM name="invalidGradient" subType="MSR">
      <Features>X,Y</Features>
      <Target>Z</Target>
      <gradient>invalid</gradient>
    </ROM>
    <ROM name="invalidBetaNonNumeric" subType="MSR">
      <Features>X,Y</Features>
      <Target>Z</Target>
      <beta>invalid</beta>
    </ROM>
    <ROM name="invalidBetaLow" subType="MSR">
      <Features>X,Y</Features>
      <Target>Z</Target>
      <beta>0</beta>
    </ROM>
    <ROM name="invalidBetaHigh" subType="MSR">
      <Features>X,Y</Features>
      <Target>Z</Target>
      <beta>3</beta>
    </ROM>
    <ROM name="invalidBetaWarning" subType="MSR">
      <Features>X,Y</Features>
      <Target>Z</Target>
      <graph>approximate knn</graph>
      <beta>-1</beta>
    </ROM>
    <ROM name="invalidBetaNonNumericWarning" subType="MSR">
      <Features>X,Y</Features>
      <Target>Z</Target>
      <graph>approximate knn</graph>
      <beta>invalid</beta>
    </ROM>
    <ROM name="invalidPartitionPrediction" subType="MSR">
      <Features>X,Y</Features>
      <Target>Z</Target>
      <partitionPredictor>invalid</partitionPredictor>
    </ROM>
    <ROM name="invalidBandwidth" subType="MSR">
      <Features>X,Y</Features>
      <Target>Z</Target>
      <bandwidth>0</bandwidth>
    </ROM>
    <ROM name="invalidBandwidthNonNumeric" subType="MSR">
      <Features>X,Y</Features>
      <Target>Z</Target>
      <bandwidth>invalid</bandwidth>
    </ROM>
    <ROM name="invalidBandwidthWarning" subType="MSR">
      <Features>X,Y</Features>
      <Target>Z</Target>
      <partitionPredictor>svm</partitionPredictor>
      <bandwidth>0</bandwidth>
    </ROM>
    <ROM name="invalidBandwidthNonNumericWarning" subType="MSR">
      <Features>X,Y</Features>
      <Target>Z</Target>
      <partitionPredictor>svm</partitionPredictor>
      <bandwidth>invalid</bandwidth>
    </ROM>
    <ROM name="invalidKNN" subType="MSR">
      <Features>X,Y</Features>
      <Target>Z</Target>
      <knn>invalid</knn>
    </ROM>
    <ROM name="invalidSimplification" subType="MSR">
      <Features>X,Y</Features>
      <Target>Z</Target>
      <simplification>invalid</simplification>
    </ROM>
    <ROM name="invalidPersistence" subType="MSR">
      <Features>X,Y</Features>
      <Target>Z</Target>
      <persistence>invalid</persistence>
    </ROM>
    <ROM name="invalidKernel" subType="MSR">
      <Features>X,Y</Features>
      <Target>Z</Target>
      <partitionPredictor>kde</partitionPredictor>
      <kernel>invalid</kernel>
    </ROM>
    <ROM name="invalidKernelWarning" subType="MSR">
      <Features>X,Y</Features>
      <Target>Z</Target>
      <partitionPredictor>svm</partitionPredictor>
      <kernel>invalid</kernel>
    </ROM>
    <!-- The weighted version has not been implemented yet -->
    <ROM name="invalidWeighted" subType="MSR">
      <Features>X,Y</Features>
      <Target>Z</Target>
      <weighted>invalid</weighted>
    </ROM>
  </Models>

  <ExternalXML node="Distributions" xmlToLoad="distributions.xml"/>
  <ExternalXML node="Samplers" xmlToLoad="samplers.xml"/>

  <Steps>
    <MultiRun name="sample" sleepTime="1e-5">
      <Input class="DataObjects" type="PointSet">dummyIN</Input>
      <Model class="Models" type="ExternalModel">foo</Model>
      <Sampler class="Samplers" type="MonteCarlo">mcSampler</Sampler>
      <Output class="DataObjects" type="PointSet">trainingData</Output>
      <Output class="OutStreams" type="Print">trainingData</Output>
    </MultiRun>
    <RomTrainer name="train">
      <Input class="DataObjects" type="PointSet">trainingData</Input>
      <Output class="Models" type="ROM">invalidWeighted</Output>
      <Output class="Models" type="ROM">KDE</Output>
    </RomTrainer>
  </Steps>

  <OutStreams>
    <!-- A csv file containing the output of the example -->
    <Print name="trainingData">
      <type>csv</type>
      <source>trainingData</source>
      <what>input,output</what>
    </Print>
  </OutStreams>

  <DataObjects>
    <!-- The input PointSet object -->
    <PointSet name="dummyIN">
      <Input>X,Y</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <PointSet name="trainingData">
      <Input>X,Y</Input>
      <Output>Z</Output>
    </PointSet>
  </DataObjects>

</Simulation>
