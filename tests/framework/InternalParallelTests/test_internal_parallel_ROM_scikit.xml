<?xml version="1.0" ?>
<Simulation>
  <TestInfo>
    <name>framework/InternalParallelTests.ROMscikit</name>
    <author>alfoa</author>
    <created>2015-10-07</created>
    <classesTested>JobHandler.ParallelPython, Models.ROM.SKLearn</classesTested>
    <description>
       This test is aimed to check the functionality of the RAVEN parallelization scheme for Internal Objects.
       In this case the functionality of the parallelization is tested for the Model ROM of type SKLearn
    </description>
    <revisions>
      <revision author="maljdan" date="2016-04-06">Updating test cases to reflect the changes to the user input.</revision>
      <revision author="maljdan" date="2016-04-25">Fixing the internal parallel tests to use support vector regression and making the step sizes look the same in the cluster and local test cases. This creates a more robust test case since the data points will be floating point values.</revision>
      <revision author="maljdan" date="2016-04-25">Switching to a different regressor that yields more consistent results.</revision>
      <revision author="maljdan" date="2016-04-25">Regolding based on 1-nearest neighbor regression. This should effectively report the same information as the training data.</revision>
      <revision author="alfoa" date="2017-01-21">Adding this test description.</revision>
      <revision author="maljdan" date="2017-09-19">Adding a maxQueueSize for testing a new feature.</revision>
    </revisions>
  </TestInfo>
  <RunInfo>
    <WorkingDir>InternalParallelScikit</WorkingDir>
    <Sequence>step1,step2,step3,step4</Sequence>
    <batchSize>4</batchSize>
    <maxQueueSize>100</maxQueueSize>
    <internalParallel>True</internalParallel>
  </RunInfo>

  <Steps>
    <MultiRun name="step1" pauseAtEnd="false">
      <Input class="DataObjects" type="PointSet">Data1</Input>
      <Model class="Models" type="ExternalModel">XM1</Model>
      <Sampler class="Samplers" type="Grid">grid1</Sampler>
      <Output class="DataObjects" type="PointSet">Data2</Output>
    </MultiRun>
    <MultiRun name="step3" pauseAtEnd="false">
      <Input class="DataObjects" type="PointSet">Data1</Input>
      <Model class="Models" type="ROM">ROM1</Model>
      <Sampler class="Samplers" type="Grid">grid1</Sampler>
      <Output class="DataObjects" type="PointSet">Data3</Output>
    </MultiRun>
    <IOStep name="step4" pauseAtEnd="false">
      <Input class="DataObjects" type="PointSet">Data2</Input>
      <Input class="DataObjects" type="PointSet">Data3</Input>
      <Output class="OutStreams" type="Print">PrintDataData2</Output>
      <Output class="OutStreams" type="Print">PrintDataData3</Output>
    </IOStep>
    <RomTrainer name="step2">
      <Input class="DataObjects" type="PointSet">Data2</Input>
      <Output class="Models" type="ROM">ROM1</Output>
    </RomTrainer>
  </Steps>

  <Samplers>
    <Grid name="grid1">
      <variable name="x1">
        <distribution>x1_dst</distribution>
        <grid construction="equal" steps="5" type="value">-10 10</grid>
      </variable>
      <variable name="x2">
        <distribution>x2_dst</distribution>
        <grid construction="equal" steps="6" type="value">-10 10</grid>
      </variable>
    </Grid>
  </Samplers>

  <DataObjects>
    <PointSet name="Data1">
      <Input>x1,x2</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <PointSet name="Data2">
      <Input>x1,x2</Input>
      <Output>y</Output>
    </PointSet>
    <PointSet name="Data3">
      <Input>x1,x2</Input>
      <Output>y</Output>
    </PointSet>
  </DataObjects>

  <Distributions>
    <Normal name="x1_dst">
      <upperBound>10</upperBound>
      <lowerBound>-10</lowerBound>
      <mean>0.5</mean>
      <sigma>0.1</sigma>
    </Normal>
    <Normal name="x2_dst">
      <upperBound>10</upperBound>
      <lowerBound>-10</lowerBound>
      <mean>-0.15</mean>
      <sigma>0.05</sigma>
    </Normal>
  </Distributions>

  <Models>
    <ExternalModel ModuleToLoad="InternalParallelScikit/XM1_model" name="XM1" subType="">
      <variables>x1,x2,y,z</variables>
    </ExternalModel>
    <ROM name="ROM1" subType="SciKitLearn">
      <SKLtype>neighbors|KNeighborsRegressor</SKLtype>
      <n_neighbors>1</n_neighbors>
      <Features>x1,x2</Features>
      <Target>y</Target>
    </ROM>
  </Models>

  <OutStreams>
    <Print name="PrintDataData2">
      <type>csv</type>
      <source>Data2</source>
    </Print>
    <Print name="PrintDataData3">
      <type>csv</type>
      <source>Data3</source>
    </Print>
  </OutStreams>

</Simulation>
