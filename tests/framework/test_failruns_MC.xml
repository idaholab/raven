<?xml version="1.0" ?>
<Simulation verbosity="debug">
  <TestInfo>
    <name>framework.failrunsMC</name>
    <author>talbpaul</author>
    <created>2015-08-25</created>
    <classesTested>Steps.MultiRun</classesTested>
    <description>
       This test is aimed to check the capability of RAVEN to identify failures (Model crashes in some realizations) when a sampling strategy is employed.
    </description>
    <revisions>
      <revision author="alfoa" date="2015-09-12">removed syntax inconsistency with respect standards for Samplers (underscores instead of camelBack) + created conversion script</revision>
      <revision author="cogljj" date="2015-09-29">Modifing external modules to use relative to working directory.</revision>
      <revision author="maljdan" date="2016-04-06">Updating test cases to reflect the changes to the user input.</revision>
      <revision author="alfoa" date="2017-01-21">Adding this test description.</revision>
    </revisions>
  </TestInfo>
  <RunInfo>
    <WorkingDir>RunFailures</WorkingDir>
    <Sequence>sample,print,csample,cprint</Sequence>
    <batchSize>1</batchSize>
  </RunInfo>

  <Files>
    <Input name="infile.inp" type="">input.inp</Input>
  </Files>

  <Steps>
    <MultiRun name="sample">
      <Input class="DataObjects" type="PointSet">dummyIN</Input>
      <Model class="Models" type="ExternalModel">failer</Model>
      <Sampler class="Samplers" type="MonteCarlo">mc</Sampler>
      <Output class="DataObjects" type="PointSet">solns</Output>
    </MultiRun>
    <MultiRun name="csample" repeatFailureRuns="3">
      <Input class="Files" type="">infile.inp</Input>
      <Model class="Models" type="ExternalModel">codefailer</Model>
      <Sampler class="Samplers" type="MonteCarlo">mc</Sampler>
      <Output class="DataObjects" type="PointSet">csolns</Output>
    </MultiRun>
    <IOStep name="print">
      <Input class="DataObjects" type="PointSet">solns</Input>
      <Output class="OutStreams" type="Print">MCdump</Output>
    </IOStep>
    <IOStep name="cprint">
      <Input class="DataObjects" type="PointSet">csolns</Input>
      <Output class="OutStreams" type="Print">MCdumpC</Output>
    </IOStep>
  </Steps>

  <Distributions>
    <Uniform name="u1">
      <lowerBound>-1</lowerBound>
      <upperBound>1</upperBound>
    </Uniform>
  </Distributions>

  <Samplers>
    <MonteCarlo name="mc">
      <samplerInit>
        <limit>10</limit>
        <initialSeed>3720</initialSeed>
      </samplerInit>
      <variable name="x">
        <distribution>u1</distribution>
      </variable>
      <variable name="y">
        <distribution>u1</distribution>
      </variable>
    </MonteCarlo>
  </Samplers>

  <Models>
    <Dummy name="MyDummy" subType=""/>
    <ExternalModel ModuleToLoad="failer" name="failer" subType="">
      <variables>x,y,ans</variables>
    </ExternalModel>
    <Code name="codefailer" subType="GenericCode">
      <executable>RunFailures/codeFailer.py</executable>
      <inputExtensions>inp</inputExtensions>
      <clargs arg="python" type="prepend"/>
      <clargs arg="" extension=".inp" type="input"/>
      <fileargs arg="out" type="output"/>
      <prepend>python</prepend>
    </Code>
  </Models>

  <DataObjects>
    <PointSet name="dummyIN">
      <Input>x,y</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <PointSet name="solns">
      <Input>x,y</Input>
      <Output>ans</Output>
    </PointSet>
    <PointSet name="csolns">
      <Input>x,y</Input>
      <Output>ans</Output>
    </PointSet>
  </DataObjects>

  <OutStreams>
    <Print name="MCdump">
      <type>csv</type>
      <source>solns</source>
    </Print>
    <Print name="MCdumpC">
      <type>csv</type>
      <source>csolns</source>
    </Print>
  </OutStreams>

</Simulation>
