<?xml version="1.0" ?>
<Simulation printTimeStamps="False" verbosity="debug">
  <TestInfo>
    <name>framework/ErrorChecks.MVNnotSquare</name>
    <author>talbpaul</author>
    <created>2016-07-14</created>
    <classesTested>Distributions.MultivariateNormal</classesTested>
    <description>
       This test is aimed to check the functionality of RAVEN to error out in case some input inconsistencies are found.
       In this case, the fact that the MultiVariate distribution errors out when it is not square
    </description>
    <revisions>
      <revision author="alfoa" date="2017-01-21">Adding this test description.</revision>
    </revisions>
  </TestInfo>
  
  <RunInfo>
    <WorkingDir>pcaIndex</WorkingDir>
    <Sequence>FirstMRun,Dump</Sequence>
    <batchSize>1</batchSize>
  </RunInfo>

  <Files>
    <Input name="lorentzAttractor_noK.py" type="">lorentzAttractor_noK.py</Input>
  </Files>

  <Models>
    <ExternalModel ModuleToLoad="../AnalyticModels/attenuate" name="PythonModule" subType="">
      <variables>x0,y0,z0,ans</variables>
    </ExternalModel>
  </Models>

  <Distributions>
    <MultivariateNormal method="pca" name="MVN">
      <transformation>
        <rank>2</rank>
      </transformation>
      <mu>0.0 60.0 60.0</mu>
      <covariance type="abs">
            1.0       0.8      -0.5
            0.8       1.0      0.3
        </covariance>
    </MultivariateNormal>
  </Distributions>

  <Samplers>
    <MonteCarlo name="MC_external">
      <samplerInit>
        <limit>20</limit>
        <initialSeed>1</initialSeed>
      </samplerInit>
      <variable name="x1,z1">
        <distribution dim="1">MVN</distribution>
      </variable>
      <variable name="y1">
        <distribution dim="2">MVN</distribution>
      </variable>
      <variablesTransformation distribution="MVN">
        <latentVariables>y1</latentVariables>
        <manifestVariables>x0,y0,z0</manifestVariables>
        <manifestVariablesIndex>3,2,1</manifestVariablesIndex>
        <method>pca</method>
      </variablesTransformation>
    </MonteCarlo>
  </Samplers>

  <Steps>
    <MultiRun name="FirstMRun">
      <Input class="DataObjects" type="PointSet">inputPlaceHolder</Input>
      <Model class="Models" type="ExternalModel">PythonModule</Model>
      <Sampler class="Samplers" type="MonteCarlo">MC_external</Sampler>
      <Output class="DataObjects" type="PointSet">testPrintPointSet</Output>
    </MultiRun>
    <IOStep name="Dump">
      <Input class="DataObjects" type="PointSet">testPrintPointSet</Input>
      <Output class="OutStreams" type="Print">testPrintPointSet_dump</Output>
    </IOStep>
  </Steps>

  <OutStreams>
    <Print name="testPrintPointSet_dump">
      <type>csv</type>
      <source>testPrintPointSet</source>
    </Print>
  </OutStreams>

  <DataObjects>
    <PointSet name="testPrintPointSet">
      <Input>x0,y0,z0</Input>
      <Output>x,y,z</Output>
    </PointSet>
    <PointSet name="inputPlaceHolder">
      <Input>x0,y0,z0</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
  </DataObjects>

</Simulation>
