<?xml version="1.0" ?>
<Simulation verbosity="debug">
  <RunInfo>
    <WorkingDir>Sets</WorkingDir>
    <Sequence>sample,print</Sequence>
    <batchSize>1</batchSize>
  </RunInfo>
  <TestInfo>
    <name>framework/VariableGroups/SetOperations</name>
    <author>talbpaul</author>
    <created>2016-02-08</created>
    <classesTested>VariableGroups</classesTested>
    <description>
      Tests complex VariableGroup construction using plus, minus, intersect, and symmetric difference
      operations. Uses these constructs in the DataObjects.

      To test correct operation, check the headers of the output data objects for the right variable lists,
      both the names themeselves and the order of the columns.

      Additional unit tests for VariableGroups are in the raven/tests/framework/unit_tests/utils/testXmlUtils.py file.
    </description>
    <revisions>
      <revision author="talbpaul" date="2018-09-25">implicit nested group usage instead of explicit</revision>
    </revisions>
  </TestInfo>

  <VariableGroups>
    <Group name="x_odd"  >x1,x3,x5</Group>
    <Group name="x_even" >x2,x4,x6</Group>
    <Group name="x_first">x1,x2,x3</Group>
    <Group name="y_group">y1,y2</Group>
    <Group name="add_remove">x_first, -x1, + x4, +x5</Group>
    <Group name="union">x_odd, +x_even</Group>
    <Group name="complement">x_odd, -x_first</Group>
    <Group name="intersect">x_even, ^x_first</Group>
    <Group name="sym_diff">x_odd, % x_first</Group>
  </VariableGroups>

  <Distributions>
    <Normal name="NormDist">
      <mean>0</mean>
      <sigma>1</sigma>
    </Normal>
  </Distributions>

  <Samplers>
    <MonteCarlo name="mc">
      <samplerInit>
        <limit>3</limit>
        <initialSeed>42</initialSeed>
      </samplerInit>
      <variable name="x1">
        <distribution>NormDist</distribution>
      </variable>
      <variable name="x2">
        <distribution>NormDist</distribution>
      </variable>
      <variable name="x3">
        <distribution>NormDist</distribution>
      </variable>
      <variable name="x4">
        <distribution>NormDist</distribution>
      </variable>
      <variable name="x5">
        <distribution>NormDist</distribution>
      </variable>
      <variable name="x6">
        <distribution>NormDist</distribution>
      </variable>
    </MonteCarlo>
  </Samplers>

  <Models>
    <Dummy name="MyDummy" subType=""/>
  </Models>

  <Steps>
    <MultiRun name="sample">
      <Input class="DataObjects" type="PointSet">dummyIN</Input>
      <Model class="Models" type="Dummy">MyDummy</Model>
      <Sampler class="Samplers" type="MonteCarlo">mc</Sampler>
      <Output class="DataObjects" type="PointSet">standard</Output>
      <Output class="DataObjects" type="PointSet">addrem</Output>
      <Output class="DataObjects" type="PointSet">uni</Output>
      <Output class="DataObjects" type="PointSet">comp</Output>
      <Output class="DataObjects" type="PointSet">intx</Output>
      <Output class="DataObjects" type="PointSet">sdiff</Output>
    </MultiRun>
    <IOStep name="print">
      <Input class="DataObjects" type="PointSet">standard</Input>
      <Input class="DataObjects" type="PointSet">addrem</Input>
      <Input class="DataObjects" type="PointSet">uni</Input>
      <Input class="DataObjects" type="PointSet">comp</Input>
      <Input class="DataObjects" type="PointSet">intx</Input>
      <Input class="DataObjects" type="PointSet">sdiff</Input>
      <Output class="OutStreams" type="Print">dump_standard</Output>
      <Output class="OutStreams" type="Print">dump_addrem</Output>
      <Output class="OutStreams" type="Print">dump_uni</Output>
      <Output class="OutStreams" type="Print">dump_comp</Output>
      <Output class="OutStreams" type="Print">dump_intx</Output>
      <Output class="OutStreams" type="Print">dump_sdiff</Output>
    </IOStep>
  </Steps>

  <DataObjects>
    <PointSet name="dummyIN">
      <Input>union</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <PointSet name="standard">
      <Input>union</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <PointSet name="addrem">
      <Input>add_remove</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <PointSet name="uni">
      <Input>union</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <PointSet name="comp">
      <Input>complement</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <PointSet name="intx">
      <Input>intersect</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <PointSet name="sdiff">
      <Input>sym_diff</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
  </DataObjects>

  <OutStreams>
    <Print name="dump_standard">
      <type>csv</type>
      <source>standard</source>
      <what>input, output</what>
    </Print>
    <Print name="dump_addrem">
      <type>csv</type>
      <source>addrem</source>
      <what>input, output</what>
    </Print>
    <Print name="dump_uni">
      <type>csv</type>
      <source>uni</source>
      <what>input, output</what>
    </Print>
    <Print name="dump_comp">
      <type>csv</type>
      <source>comp</source>
      <what>input, output</what>
    </Print>
    <Print name="dump_intx">
      <type>csv</type>
      <source>intx</source>
      <what>input, output</what>
    </Print>
    <Print name="dump_sdiff">
      <type>csv</type>
      <source>sdiff</source>
      <what>input, output</what>
    </Print>
  </OutStreams>

</Simulation>
