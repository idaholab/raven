<?xml version="1.0" ?>
<Simulation verbosity="debug">
  <TestInfo>
    <name>framework/Optimizers.GoldsteinPrice</name>
    <author>talbpaul</author>
    <created>2017-05-30</created>
    <classesTested>Optimizer</classesTested>
    <description>
      This test runs the optimization on the Goldstein-Price function.  It tests analytic optimization values
      as well as the mechanical operation of the test.  Also covers the Bernoulli stochastic distribution, and
      convergence nodes iterationLimit, absoluteThreshold, and minStepSize.
    </description>
    <analytic>
      This test uses the Goldstein-Price function, which is documented in the analytic tests documentation under
      the Optimizer functions section.
    </analytic>
  </TestInfo>

  <RunInfo>
    <WorkingDir>GoldsteinPrice</WorkingDir>
    <Sequence>optimize,getOptPoint,print</Sequence>
    <batchSize>1</batchSize>
  </RunInfo>

  <Steps>
    <MultiRun name="optimize">
      <Input class="DataObjects" type="PointSet">dummyIN</Input>
      <Model class="Models" type="ExternalModel">gp</Model>
      <Optimizer class="Optimizers" type="SPSA">opter</Optimizer>
      <SolutionExport class="DataObjects" type="PointSet">opt_export</SolutionExport>
      <Output class="DataObjects" type="PointSet">optOut</Output>
    </MultiRun>
    <IOStep name="print" pauseAtEnd="True">
      <Input class="DataObjects" type="HistorySet">opt_export</Input>
      <Output class="OutStreams" type="Print">opt_export</Output>
    </IOStep>
    <PostProcess name="getOptPoint">
      <Input class="DataObjects" type="HistorySet">opt_export</Input>
      <Model class="Models" type="PostProcessor">snapshot</Model>
      <Output class="DataObjects" type="PointSet">opt_soln</Output>
      <Output class="OutStreams" type="Print">opt_soln</Output>
    </PostProcess>
  </Steps>

  <Optimizers>
    <SPSA name="opter">
      <initialization>
        <limit>4000</limit>
        <initialSeed>42</initialSeed>
        <thresholdTrajRemoval>1e-3</thresholdTrajRemoval>
      </initialization>
      <TargetEvaluation class="DataObjects" type="PointSet">optOut</TargetEvaluation>
      <convergence>
        <iterationLimit>400</iterationLimit>
        <relativeThreshold>1e-8</relativeThreshold>
        <absoluteThreshold>1e-6</absoluteThreshold>
        <gradientThreshold>1e-3</gradientThreshold>
        <minStepSize>1e-7</minStepSize>
      </convergence>
      <variable name="x">
        <upperBound>1.5</upperBound>
        <lowerBound>-1.5</lowerBound>
        <initial>1,1,0,-1,-1</initial>
      </variable>
      <variable name="y">
        <upperBound>1.5</upperBound>
        <lowerBound>-1.5</lowerBound>
        <initial>1,-1,0,1,-1</initial>
      </variable>
      <objectVar>ans</objectVar>
      <parameter>
        <numGradAvgIterations>2</numGradAvgIterations>
        <stochasticDistribution>Bernoulli</stochasticDistribution>
      </parameter>
    </SPSA>
  </Optimizers>

  <Models>
    <Dummy name="MyDummy" subType=""/>
    <ExternalModel ModuleToLoad="../../../framework/AnalyticModels/optimizing/goldstein_price" name="gp" subType="">
      <variables>x,y,ans</variables>
    </ExternalModel>
    <PostProcessor name="snapshot" subType="InterfacedPostProcessor">
      <method>HistorySetSnapShot</method>
      <type>max</type>
      <pivotVar>varsUpdate</pivotVar>
    </PostProcessor>
  </Models>

  <DataObjects>
    <PointSet name="dummyIN">
      <Input>x,y</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <PointSet name="optOut">
      <Input>x,y</Input>
      <Output>ans</Output>
    </PointSet>
    <PointSet name="opt_soln">
      <Input>trajID</Input>
      <Output>x,y,ans,varsUpdate</Output>
    </PointSet>
    <PointSet name="opt_export">
      <Input>trajID</Input>
      <Output>x,y,ans,varsUpdate</Output>
    </PointSet>
  </DataObjects>

  <OutStreams>
    <Print name="opt_export">
      <type>csv</type>
      <source>opt_export</source>
      <clusterLabel>trajID</clusterLabel>
    </Print>
    <Print name="opt_soln">
      <type>csv</type>
      <source>opt_soln</source>
    </Print>
  </OutStreams>

</Simulation>
