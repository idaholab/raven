<?xml version="1.0" ?>
<Simulation>
  <TestInfo>
    <name>framework.NDGridProbabilityWeightValue</name>
    <author>wangc</author>
    <created>2015-09-30</created>
    <classesTested>Distributions.NDInverseWeight, Distrubtions.NDCartesianSpline, Samplers.Grid</classesTested>
    <description>
       This test is aimed to check the capability of RAVEN to handle ND probability density functions (distributions), when 
       a Grid sampling strategy is performed. In this case, the capability to construct marginal distributions (for each uncertanties of
       the ND distribution domain), when the discretization is performed in VALUE.
    </description>
    <revisions>
      <revision author="talbpaul" date="2016-02-08">first update, looking for more failing tests to add</revision>
      <revision author="maljdan" date="2016-04-06">Updating test cases to reflect the changes to the user input.</revision>
      <revision author="alfoa" date="2017-01-21">Adding this test description.</revision>
    </revisions>
  </TestInfo>
  <RunInfo>
    <WorkingDir>NDGridPWvalue</WorkingDir>
    <Sequence>FirstMRun</Sequence>
    <batchSize>1</batchSize>
  </RunInfo>

  <Files>
    <Input name="lorentzAttractor.py" type="">lorentzAttractor.py</Input>
  </Files>

  <Models>
    <ExternalModel ModuleToLoad="NDGridPWvalue/lorentzAttractor" name="PythonModule" subType="">
      <variables>sigma,rho,beta,x,y,z,k,time,x0,y0,z0,k0</variables>
    </ExternalModel>
  </Models>

  <Distributions>
    <Normal name="k0_distrib">
      <mean>4</mean>
      <sigma>1</sigma>
    </Normal>
    <NDCartesianSpline name="ND_CartesianSpline_P">
      <dataFilename type="PDF">2DgaussianCartesianPDF.txt</dataFilename>
      <workingDir>NDGridPWvalue/</workingDir>
    </NDCartesianSpline>
  </Distributions>

  <Samplers>
    <Grid name="grid_value_SP">
      <variable name="k0">
        <distribution>k0_distrib</distribution>
        <grid construction="custom" type="value">3.0 4.0 5.0</grid>
      </variable>
      <variable name="x0">
        <distribution dim="1">ND_CartesianSpline_P</distribution>
        <grid construction="custom" type="value">-2.0 -1.0 0.0 1.0 1.9</grid>
      </variable>
      <variable name="y0,z0">
        <distribution dim="2">ND_CartesianSpline_P</distribution>
        <grid construction="custom" type="value">20.0 40.0 60.0 80.0 98.0</grid>
      </variable>
    </Grid>
  </Samplers>

  <Steps>
    <MultiRun name="FirstMRun" re-seeding="1">
      <Input class="Files" type="">lorentzAttractor.py</Input>
      <Model class="Models" type="ExternalModel">PythonModule</Model>
      <Sampler class="Samplers" type="Grid">grid_value_SP</Sampler>
      <Output class="DataObjects" type="PointSet">testPrintPointSet</Output>
      <Output class="OutStreams" type="Print">testPrintPointSet_dump</Output>
    </MultiRun>
  </Steps>

  <OutStreams>
    <Print name="testPrintPointSet_dump">
      <type>csv</type>
      <source>testPrintPointSet</source>
      <what>Input,Output,Input|ProbabilityWeight</what>
    </Print>
  </OutStreams>

  <DataObjects>
    <PointSet name="testPrintPointSet">
      <Input>x0,y0,z0,k0</Input>
      <Output>x,y,z,k</Output>
    </PointSet>
  </DataObjects>

</Simulation>
