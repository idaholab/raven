<?xml version="1.0" ?>
<Simulation verbosity="quiet">

  <TestInfo>
    <name>framework/Samplers/AdaptiveBatch.InvalidScoringStrategy</name>
    <author>maljdan</author>
    <created>2015-11-03</created>
    <classesTested>Samplers.LimitSurfaceSearch</classesTested>
    <description>
       An example of using the limit surface post-processor with an invalid
       scoring strategy. This should print a message and exit.

       Note, all of the tests in AdaptiveBatch operate on a 2D input domain with
       the goal of extracting a circular limit surface with radius 0.5 and
       centered at the origin, (0,0).
    </description>
    <revisions>
      <revision author="maljdan" date="2015-11-20">Collapsing the batch sampling into the limit surface class, updating documentation, XSD, and the test cases to reflect this change.</revision>
      <revision author="talbpaul" date="2016-02-08">First update, looking for more failing tests to add.</revision>
      <revision author="maljdan" date="2016-04-06">Updating test cases to reflect the changes to the user input.</revision>
      <revision author="maljdan" date="2017-01-18">Adding test description.</revision>
    </revisions>
  </TestInfo>

  <RunInfo>
    <WorkingDir>circle</WorkingDir>
    <Sequence>sample,adapt</Sequence>
    <batchSize>1</batchSize>
  </RunInfo>

  <Steps>
    <MultiRun name="sample" sleepTime="1e-5">
      <Input class="DataObjects" type="PointSet">dummyIn</Input>
      <Model class="Models" type="ExternalModel">function</Model>
      <Sampler class="Samplers" type="MonteCarlo">mcSampler</Sampler>
      <Output class="DataObjects" type="PointSet">response</Output>
    </MultiRun>
    <MultiRun name="adapt">
      <Input class="DataObjects" type="PointSet">inputHolder</Input>
      <Model class="Models" type="ExternalModel">function</Model>
      <Sampler class="Samplers" type="LimitSurfaceSearch">adaptiveSearch</Sampler>
      <SolutionExport class="DataObjects" type="PointSet">limit_surface</SolutionExport>
      <Output class="DataObjects" type="PointSet">response</Output>
    </MultiRun>
  </Steps>

  <DataObjects>
    <PointSet name="dummyIn">
      <Input>x2,x1</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <PointSet name="response">
      <Input>x2,x1</Input>
      <Output>y</Output>
    </PointSet>
    <PointSet name="inputHolder">
      <Input>x2,x1</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <PointSet name="limit_surface">
      <Input>x2,x1</Input>
      <Output>label</Output>
    </PointSet>
  </DataObjects>

  <Distributions>
    <Uniform name="uniform">
      <upperBound>1</upperBound>
      <lowerBound>-1</lowerBound>
    </Uniform>
  </Distributions>

  <Samplers>
    <MonteCarlo name="mcSampler">
      <samplerInit>
        <limit>20</limit>
        <initialSeed>0</initialSeed>
      </samplerInit>
      <variable name="x1">
        <distribution>uniform</distribution>
      </variable>
      <variable name="x2">
        <distribution>uniform</distribution>
      </variable>
    </MonteCarlo>
    <LimitSurfaceSearch name="adaptiveSearch">
      <ROM class="Models" type="ROM">mySVM</ROM>
      <Function class="Functions" type="External">label</Function>
      <TargetEvaluation class="DataObjects" type="PointSet">response</TargetEvaluation>
      <Convergence forceIteration="False" limit="16" persistence="25" weight="value">9e-5</Convergence>
      <scoring>invalid</scoring>
      <batchStrategy>maxP</batchStrategy>
      <thickness>1</thickness>
      <maxBatchSize>4</maxBatchSize>
      <variable name="x1">
        <distribution>uniform</distribution>
      </variable>
      <variable name="x2">
        <distribution>uniform</distribution>
      </variable>
    </LimitSurfaceSearch>
  </Samplers>

  <Models>
    <ExternalModel ModuleToLoad="function" name="function" subType="">
      <variables>x1,x2,y</variables>
    </ExternalModel>
    <ROM name="mySVM" subType="SciKitLearn">
      <Features>x1,x2</Features>
      <Target>label</Target>
      <SKLtype>svm|SVC</SKLtype>
      <kernel>rbf</kernel>
      <gamma>10</gamma>
      <tol>1e-5</tol>
      <C>50</C>
      <random_state>1</random_state>
    </ROM>
  </Models>

  <Functions>
    <External file="goal" name="label">
      <variable>y</variable>
    </External>
  </Functions>

</Simulation>
