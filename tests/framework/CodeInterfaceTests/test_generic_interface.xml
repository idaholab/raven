<?xml version="1.0" ?>
<Simulation verbosity="debug">
  <TestInfo>
    <name>framework/CodeInterfaceTests.genericInterface2</name>
    <author>senrs</author>
    <created>2015-10-06</created>
    <classesTested>Models.Code.GenericCode</classesTested>
    <description>
       An example of using the the Model Code of type GenericCode.
       This test is aimed to show the usage of the GenericCode interface present
       in RAVEN in order to drive an external code using the wild cards approach
    </description>
    <revisions>
      <revision author="talbpaul" date="2016-01-04">Re-golded for updated external model variables</revision>
      <revision author="maljdan" date="2016-04-06">Updating test cases to reflect the changes to the user input.</revision>
      <revision author="alfoa" date="2017-01-21">Adding this test description.</revision>
      <revision author="alfoa" date="2018-10-01">This is a requirement test now.</revision>
    </revisions>
    <requirements>R-IS-6</requirements>
  </TestInfo>
  <RunInfo>
    <JobName>testGenericCodeInterface</JobName>
    <Sequence>sample</Sequence>
    <WorkingDir>GenericInterface</WorkingDir>
    <batchSize>1</batchSize>
  </RunInfo>

  <Files>
    <Input name="one.xml" type="">one.xml</Input>
    <Input name="inp.two" type="">inp.two</Input>
    <Input name="inp.three" type="">inp.three</Input>
    <Input name="mesh" type="">dummy.e</Input>
    <Input name="a_dummy_file_for_subdirectory" type="" subDirectory="testSubDirectory">dummy_file_for_subdirectory.dummy</Input>
  </Files>

  <Models>
    <Code name="poly" subType="GenericCode">
      <executable>GenericInterface/poly_inp.py</executable>
      <clargs arg="python" type="prepend"/>
      <clargs arg="-i" extension=".xml" type="input"/>
      <clargs arg="-a" extension=".two" type="input"/>
      <clargs arg="-a" extension=".three" type="input"/>
      <clargs arg="-o" type="output"/>
    </Code>
  </Models>

  <Distributions>
    <Uniform name="xd">
      <lowerBound>0.0</lowerBound>
      <upperBound>1.0</upperBound>
    </Uniform>
    <Uniform name="yd">
      <lowerBound>1.0</lowerBound>
      <upperBound>2.0</upperBound>
    </Uniform>
  </Distributions>

  <Samplers>
    <Grid name="grid">
      <variable name="x">
        <distribution>xd</distribution>
        <grid construction="equal" steps="1" type="CDF">0.3 0.7</grid>
      </variable>
      <variable name="y">
        <distribution>yd</distribution>
        <grid construction="equal" steps="1" type="CDF">0.3 0.7</grid>
      </variable>
    </Grid>
  </Samplers>

  <Steps>
    <MultiRun name="sample">
      <Input class="Files" type="">inp.two</Input>
      <Input class="Files" type="">one.xml</Input>
      <Input class="Files" type="">inp.three</Input>
      <Input class="Files" type="">mesh</Input>
      <Input class="Files" type="">a_dummy_file_for_subdirectory</Input>
      <Model class="Models" type="Code">poly</Model>
      <Sampler class="Samplers" type="Grid">grid</Sampler>
      <Output class="DataObjects" type="PointSet">samples</Output>
      <Output class="OutStreams" type="Print">samples</Output>
    </MultiRun>
  </Steps>

  <DataObjects>
    <PointSet name="samples">
      <Input>y,x</Input>
      <Output>poly</Output>
    </PointSet>
  </DataObjects>

  <OutStreams>
    <Print name="samples">
      <type>csv</type>
      <source>samples</source>
      <what>input,output</what>
    </Print>
  </OutStreams>

</Simulation>
