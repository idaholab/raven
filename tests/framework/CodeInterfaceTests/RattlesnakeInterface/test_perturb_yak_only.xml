<?xml version="1.0" ?>
<Simulation verbosity="debug">
  <TestInfo>
    <name>framework/CodeInterfaceTests/RattlesnakeInterface.testMCYak</name>
    <author>wangc</author>
    <created>2016-04-21</created>
    <classesTested>Models.Code.Rattlesnake, Sampler.MonteCarlo</classesTested>
    <description>
       An example of using the code interface RattleSnake when XS need to be perturbed.
       This test is aimed to check the functionality (running the code) of the Rattlesnake interface (perturbing only YAK library)
       when a MonteCarlo sampling approach is used.
    </description>
    <revisions>
      <revision author="wangc" date="2016-08-04">Modify test to perturb transport XS and regold the tests</revision>
      <revision author="talbpaul" date="2016-09-15">Test updates</revision>
      <revision author="alfoa" date="2017-01-21">Adding this test description.</revision>
    </revisions>
  </TestInfo>
  <RunInfo>
    <WorkingDir>TestRattlesnake</WorkingDir>
    <Sequence>MCTestYak</Sequence>
    <batchSize>1</batchSize>
  </RunInfo>

  <Files>
    <Input name="twigl_mixing.i" type="RattlesnakeInput">twigl_mixing.i</Input>
    <Input name="xs.xml" type="YakXSInput">xs.xml</Input>
    <Input name="alias.xml" type="YakXSAliasInput">alias.xml</Input>
  </Files>

  <Models>
    <Code name="Rattlesnake" subType="Rattlesnake">
      <executable>%FRAMEWORK_DIR%/../../rattlesnake/rattlesnake-%METHOD%</executable>
    </Code>
  </Models>

  <Distributions>
    <Normal name="G1">
      <mean>1</mean>
      <sigma>0.05</sigma>
      <lowerBound>0.00001</lowerBound>
      <upperBound>10</upperBound>
    </Normal>
    <Normal name="G2">
      <mean>1</mean>
      <sigma>0.02</sigma>
      <lowerBound>0.0001</lowerBound>
      <upperBound>10</upperBound>
    </Normal>
  </Distributions>

  <Samplers>
    <MonteCarlo name="MC1">
      <samplerInit>
        <limit>10</limit>
      </samplerInit>
      <variable name="f11">
        <distribution>G1</distribution>
      </variable>
      <variable name="c11">
        <distribution>G1</distribution>
      </variable>
      <variable name="t11">
        <distribution>G1</distribution>
      </variable>
      <variable name="n11">
        <distribution>G1</distribution>
      </variable>
      <variable name="f22">
        <distribution>G1</distribution>
      </variable>
      <variable name="c22">
        <distribution>G1</distribution>
      </variable>
      <variable name="t22">
        <distribution>G1</distribution>
      </variable>
      <variable name="n22">
        <distribution>G1</distribution>
      </variable>
      <variable name="tr11">
        <distribution>G2</distribution>
      </variable>
      <variable name="tr22">
        <distribution>G2</distribution>
      </variable>
    </MonteCarlo>
  </Samplers>

  <OutStreams>
    <Print name="out_mc_yak_dump">
      <type>csv</type>
      <source>outMC</source>
      <what>input, output</what>
    </Print>
  </OutStreams>

  <DataObjects>
    <PointSet name="outMC">
      <Input>f11,f22,c11,c22,t11,t22,n11,n22,tr11,tr22</Input>
      <Output>eigenvalue</Output>
    </PointSet>
  </DataObjects>

  <Steps>
    <MultiRun name="MCTestYak">
      <Input class="Files" type="">twigl_mixing.i</Input>
      <Input class="Files" type="">xs.xml</Input>
      <Input class="Files" type="">alias.xml</Input>
      <Model class="Models" type="Code">Rattlesnake</Model>
      <Sampler class="Samplers" type="MonteCarlo">MC1</Sampler>
      <Output class="DataObjects" type="PointSet">outMC</Output>
      <Output class="OutStreams" type="Print">out_mc_yak_dump</Output>
    </MultiRun>
  </Steps>

</Simulation>
