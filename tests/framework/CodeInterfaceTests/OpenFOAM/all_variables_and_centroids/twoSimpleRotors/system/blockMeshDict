/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2412                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   0.01;

vertices
(
    ( 0.00  0.0  0)
    ( 2.00  0.0  0)
    ( 2.00  1.0  0)
    ( 0.00  1.0  0)
    ( 0.00  0.0  1)
    ( 2.00  0.0  1)
    ( 2.00  1.0  1)
    ( 0.00  1.0  1)

    // movingZone1
    ( 0.15  0.35  0)
    ( 0.85  0.35  0)
    ( 0.85  0.65  0)
    ( 0.15  0.65  0)
    ( 0.15  0.35  1)
    ( 0.85  0.35  1)
    ( 0.85  0.65  1)
    ( 0.15  0.65  1)

//     // movingZone2
    ( 1.15  0.15  0)
    ( 1.45  0.15  0)
    ( 1.45  0.85  0)
    ( 1.15  0.85  0)
    ( 1.15  0.15  1)
    ( 1.45  0.15  1)
    ( 1.45  0.85  1)
    ( 1.15  0.85  1)

//     ( 0.75  0.15  0)
//     ( 1.05  0.15  0)
//     ( 1.05  0.85  0)
//     ( 0.75  0.85  0)
//     ( 0.75  0.15  1)
//     ( 1.05  0.15  1)
//     ( 1.05  0.85  1)
//     ( 0.75  0.85  1)
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (140 70 1) simpleGrading (1 1 1)

    hex (8 9 10 11 12 13 14 15) movingZone1 (60 24 1) simpleGrading (1 1 1)

    hex (16 17 18 19 20 21 22 23) movingZone2 (24 60 1) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    overset1
    {
        type        overset;
        faces
        (
            ( 8 12 15 11)
            (10 14 13  9)
            (11 15 14 10)
            ( 9 13 12  8)
        );
    }

    overset2
    {
        type        overset;
        faces
        (
            (16 20 23 19)
            (18 22 21 17)
            (19 23 22 18)
            (17 21 20 16)
        );
    }

    walls
    {
        type wall;
        faces
        (
            (3 7 6 2)
            (1 5 4 0)
        );
    }

    inlet
    {
        type wall;
        faces
        (
            (0 4 7 3)
        );
    }

    outlet
    {
        type wall;
        faces
        (
            (2 6 5 1)
        );
    }

    // Populated by subsetMesh
    hole
    {
        type wall;
        faces ();
    }

    frontAndBack
    {
        type empty;
        faces
        (
            (0 3 2 1)
            (4 5 6 7)
        );
    }

    frontAndBack1
    {
        type empty;
        faces
        (
            ( 8 11 10  9)
            (12 13 14 15)
        );
    }

    frontAndBack2
    {
        type empty;
        faces
        (
            (16 19 18 17)
            (20 21 22 23)
        );
    }
);

// ************************************************************************* //
