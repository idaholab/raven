[Tests]

 [./testMCMammoth_BisonRelap7]
   type = 'RavenFramework'
   input = test_perturb_mammoth_exe_bison_relap7.xml
   output = 'MammothInterface/Bison_Relap7/MCTestMammothExe/1/out~bison.csv MammothInterface/Bison_Relap7/MCTestMammothExe/2/out~bison.csv MammothInterface/Bison_Relap7/MCTestMammothExe/3/out~bison.csv'
   csv = 'MammothInterface/Bison_Relap7/perturb_exe_0.csv MammothInterface/Bison_Relap7/perturb_exe_1.csv MammothInterface/Bison_Relap7/perturb_exe_2.csv'
   rel_err = 0.001
   required_executable = '../../../../mammoth/mammoth-%METHOD%'
 [../]

 [./testMCMammothNoExecutable_BisonRelap7]
   type = 'RavenFramework'
   input = test_perturb_mammoth_bison_relap7.xml
   output = 'MammothInterface/Bison_Relap7/perturb_mammoth.csv MammothInterface/Bison_Relap7/MCTestMammoth/1/bison.i MammothInterface/Bison_Relap7/MCTestMammoth/1/relap.i MammothInterface/Bison_Relap7/MCTestMammoth/2/bison.i MammothInterface/Bison_Relap7/MCTestMammoth/2/relap.i MammothInterface/Bison_Relap7/MCTestMammoth/3/bison.i MammothInterface/Bison_Relap7/MCTestMammoth/3/relap.i'
   UnorderedCsv = 'MammothInterface/Bison_Relap7/perturb_mammoth_0.csv MammothInterface/Bison_Relap7/perturb_mammoth_1.csv MammothInterface/Bison_Relap7/perturb_mammoth_2.csv'
   test_interface_only = True
   rel_err = 0.000001
 [../]

 [./testMCMammothNoExecutableBisonRelap7WithHDF5restart]
   type = 'RavenFramework'
   input = test_mammoth_r7_bison_no_exe_hdf5_restart.xml
   output = 'MammothBisonRelap7NoExeWithHDF5restart/maxCladOutTempResultsHistory_8.csv MammothBisonRelap7NoExeWithHDF5restart/maxCladOutTempResults.csv'
   test_interface_only = True
 [../]


[./testMCMAMMOTHNoExecutable_RattlesnakeBison]
   type = 'RavenFramework'
   input = 'test_perturb_all_rattlesnake_bison.xml'
   output = 'MammothInterface/Rattlesnake_Bison/perturb_all.csv MammothInterface/Rattlesnake_Bison/perturbAll/1/quarter_pin_with_fuel.i MammothInterface/Rattlesnake_Bison/perturbAll/2/quarter_pin_with_fuel.i'
   csv = 'MammothInterface/Rattlesnake_Bison/perturb_all_0.csv MammothInterface/Rattlesnake_Bison/perturb_all_1.csv'
   test_interface_only = True
 [../]

 [./testPerturbMAMMOTHNoExecutable_RattlesnakeBison]
   type = 'RavenFramework'
   input = 'test_perturb_mammoth_rattlesnake_bison.xml'
   output = 'MammothInterface/Rattlesnake_Bison/perturb_mammoth.csv MammothInterface/Rattlesnake_Bison/MCTestMammoth/1/quarter_pin_with_fuel.i MammothInterface/Rattlesnake_Bison/MCTestMammoth/2/quarter_pin_with_fuel.i MammothInterface/Rattlesnake_Bison/MCTestMammoth/3/quarter_pin_with_fuel.i'
   csv = 'MammothInterface/Rattlesnake_Bison/perturb_mammoth_0.csv MammothInterface/Rattlesnake_Bison/perturb_mammoth_1.csv MammothInterface/Rattlesnake_Bison/perturb_mammoth_2.csv'
   test_interface_only = True
 [../]

 [./testGridBison]
   type = 'RavenFramework'
   input = 'test_Grid_Sampler_Bison.xml'
   output = 'GridTestBison/CustomSampler/1/out~gap_perfect_transfer_test'
   csv = 'GridTestBison/CustomSampler/18/out~gap_perfect_transfer_test.csv GridTestBison/CustomSampler/17/out~gap_perfect_transfer_test.csv GridTestBison/outGrid_dump.csv'
   max_time = 500
   rel_err = 0.001
   required_executable = '../../../../bison/bison-%METHOD%'
   skip_if_env = BUILD_ROOT
   #There is a problem in debug mode (possibly in bison) but this
   # test often does not work in debug mode because of the problem.
   method = 'devel opt'
 [../]

 [./testGridRattlesnake]
   type = 'RavenFramework'
   input = 'test_Grid_Sampler_rattlesnake.xml'
   output = 'GridTestTwigl/CustomSampler/18/out~twigl_mixing.csv GridTestTwigl/CustomSampler/1/out~twigl_mixing.csv GridTestTwigl/CustomSampler/10/out~twigl_mixing.csv'
   csv = 'GridTestTwigl/outGrid_dump.csv'
   max_time = 500
   rel_err = 0.001
   required_executable = '../../../../rattlesnake/rattlesnake-%METHOD%'
   skip_if_env = BUILD_ROOT
   method = 'devel opt'
 [../]

 [./testLHSBison]
  type = 'RavenFramework'
  input = 'test_LHS_Sampler_Bison.xml'
  output = 'LHStestBison/myLHS/1/out~gap_perfect_transfer_test'
  UnorderedCsv = 'LHStestBison/myLHS/1/out~gap_perfect_transfer_test.csv LHStestBison/myLHS/3/out~gap_perfect_transfer_test.csv'
  max_time = 500
  rel_err = 0.001
  required_executable = '../../../../bison/bison-%METHOD%'
  skip_if_env = BUILD_ROOT
 [../]

 [./testLHSBisonParallel]
   #REQUIREMENT_TEST R-IS-1
  type = 'RavenFramework'
  input = 'test_LHS_Sampler_Bison_parallel.xml'
  output = 'LHStestBisonParallel/myLHS/1/out~gap_perfect_transfer_test LHStestBisonParallel/LHS_Bison_dump.csv'
  UnorderedCsv = 'LHStestBisonParallel/LHS_Bison_dump.csv'
  max_time = 500
  rel_err = 0.001
  required_executable = '../../../../bison/bison-%METHOD%'
  skip_if_env = BUILD_ROOT
 [../]

 [./testMC]
   type = 'RavenFramework'
   input = 'test_mc_rattlesnake.xml'
   csv = 'TestRattlesnake/out_mc_dump.csv'
   xml = 'TestRattlesnake/MCTest/1/xs.xml TestRattlesnake/MCTest/5/xs.xml TestRattlesnake/MCTest/10/xs.xml'
   test_interface_only = True
 [../]

[./OpenModelicaInterfaceTestNoExecutable]
  type = 'RavenFramework'
  input = 'test_OpenModelica_code_interface.xml'
  output = 'OMInterfaceTest/testDummyStep/1/BouncingBall_init.xml OMInterfaceTest/testDummyStep/2/BouncingBall_init.xml OMInterfaceTest/testDummyStep/3/BouncingBall_init.xml OMInterfaceTest/testDummyStep/4/BouncingBall_init.xml OMInterfaceTest/testDummyStep/5/BouncingBall_init.xml'
  csv = 'OMInterfaceTest/testDummyStep/1/out~BouncingBall_init.csv OMInterfaceTest/testDummyStep/2/out~BouncingBall_init.csv OMInterfaceTest/testDummyStep/3/out~BouncingBall_init.csv OMInterfaceTest/testDummyStep/4/out~BouncingBall_init.csv OMInterfaceTest/testDummyStep/5/out~BouncingBall_init.csv'
  test_interface_only = True
 [../]

 [./DymolaTestNoExecutable]
  type = 'RavenFramework'
  input = 'test_Dymola_code_interface.xml'
  output = 'DMInterfaceTest/testDummyStep/1/dsin.txt DMInterfaceTest/testDummyStep/2/dsin.txt DMInterfaceTest/testDummyStep/3/dsin.txt DMInterfaceTest/testDummyStep/4/dsin.txt DMInterfaceTest/testDummyStep/5/dsin.txt'
  csv = 'DMInterfaceTest/testDummyStep/1/out~dsin.csv DMInterfaceTest/testDummyStep/2/out~dsin.csv DMInterfaceTest/testDummyStep/3/out~dsin.csv DMInterfaceTest/testDummyStep/4/out~dsin.csv DMInterfaceTest/testDummyStep/5/out~dsin.csv'
  test_interface_only = True
 [../]

 [./DymolaTestLoadSomeVarsNoExecutable]
  type = 'RavenFramework'
  input = 'test_Dymola_code_interface_load_some_vars.xml'
  output = 'DMInterfaceTestLoadSomeVars/testDummyStep/1/dsin.txt DMInterfaceTestLoadSomeVars/testDummyStep/2/dsin.txt DMInterfaceTestLoadSomeVars/testDummyStep/3/dsin.txt DMInterfaceTestLoadSomeVars/testDummyStep/4/dsin.txt DMInterfaceTestLoadSomeVars/testDummyStep/5/dsin.txt'
  csv = 'DMInterfaceTestLoadSomeVars/testDummyStep/1/out~dsin.csv'
  test_interface_only = True
 [../]


[./DymolaTestTimeDepNoExecutableEnsembleModel]
  type = 'RavenFramework'
  input = 'test_Dymola_code_interface_timedep.xml'
  output = 'DMInterfaceTestTimedep/testDummyStep/BouncingBall++2/dsin.txt DMInterfaceTestTimedep/testDummyStep/BouncingBall++3/dsin.txt DMInterfaceTestTimedep/testDummyStep/BouncingBall++4/dsin.txt DMInterfaceTestTimedep/testDummyStep/BouncingBall++2/addinp.txt DMInterfaceTestTimedep/testDummyStep/BouncingBall++3/addinp.txt'
  csv = 'DMInterfaceTestTimedep/testDummyStep/BouncingBall++1/out~dsin.csv DMInterfaceTestTimedep/testDummyStep/BouncingBall++5/out~dsin.csv'
  text = 'DMInterfaceTestTimedep/testDummyStep/BouncingBall++1/dsin.txt DMInterfaceTestTimedep/testDummyStep/BouncingBall++1/addinp.txt DMInterfaceTestTimedep/testDummyStep/BouncingBall++5/dsin.txt DMInterfaceTestTimedep/testDummyStep/BouncingBall++5/addinp.txt'
  test_interface_only = True
[../]

 [./genericInterface]
   type = 'RavenFramework'
   input = 'test_generic_interface.xml'
   output = 'GenericInterface/samples.xml GenericInterface/sample/1/testSubDirectory/dummy_file_for_subdirectory.dummy GenericInterface/sample/testSubDirectory/dummy_file_for_subdirectory.dummy'
   csv = 'GenericInterface/samples.csv'
 [../]
 [./genericInterfaceParallel]
   type = 'RavenFramework'
   input = 'generic_parallel.xml'
   output = 'GenericInterfaceParallel/samples.csv'
 [../]

 [./genericInterface2]
   type = 'RavenFramework'
   input = 'test_generic_interface.xml'
   output = 'GenericInterface/samples.xml'
   csv = 'GenericInterface/samples.csv'
   UnorderedXml = 'GenericInterface/sample/1/one.xml' #checks to make sure input is not being duplicated
   prereq = genericInterface
 [../]

 [./genericInterfaceIO]
   type = 'RavenFramework'
   input = 'test_generic_IO.xml'
   output = 'GenericInterfaceIO/samples.xml'
   csv = 'GenericInterfaceIO/samples.csv'
 [../]

 [./genericInterfaceIOCustomOutput]
   type = 'RavenFramework'
   input = 'test_generic_interface_custom_out_file.xml'
   output = 'GenericInterfaceIOCustomOutput/samples.xml'
   csv = 'GenericInterfaceIOCustomOutput/samples.csv'
 [../]

 [./CubitMooseInterface]
   type = 'RavenFramework'
   input = 'test_CUBIT_MOOSE.xml'
   output = 'CUBIT_MOOSE_test/grid_run/1/mesh~rectangle.e CUBIT_MOOSE_test/grid_run/2/mesh~rectangle.e CUBIT_MOOSE_test/grid_run/3/mesh~rectangle.e CUBIT_MOOSE_test/grid_run/4/mesh~rectangle.e'
   csv = 'CUBIT_MOOSE_test/print_data.csv'
   # Need to be able to check that cubit executable exists, but listing in required_executable
   # searches for existence of file then runs it. Running cubit by itself starts a cubit
   # command line that the test harness doesn't know how to deal with. For now, we're just
   # going to test for the existence of moose_test-opt to run.
   required_executable = '../../../../moose/test/moose_test-%METHOD%'
   required_libraries = 'cubit'
 [../]

 [./BisonAndMeshInterface]
   type = 'RavenFramework'
   input = 'test_BISON_and_MESH.xml'
   output = 'BISON_and_MESH_test/grid_run/1/mesh~coarse_input.e BISON_and_MESH_test/grid_run/2/mesh~coarse_input.e BISON_and_MESH_test/grid_run/3/mesh~coarse_input.e BISON_and_MESH_test/grid_run/4/mesh~coarse_input.e BISON_and_MESH_test/grid_run/5/mesh~coarse_input.e BISON_and_MESH_test/grid_run/6/mesh~coarse_input.e BISON_and_MESH_test/grid_run/7/mesh~coarse_input.e BISON_and_MESH_test/grid_run/8/mesh~coarse_input.e BISON_and_MESH_test/grid_run/9/mesh~coarse_input.e BISON_and_MESH_test/grid_run/10/mesh~coarse_input.e BISON_and_MESH_test/grid_run/11/mesh~coarse_input.e BISON_and_MESH_test/grid_run/12/mesh~coarse_input.e BISON_and_MESH_test/grid_run/13/mesh~coarse_input.e BISON_and_MESH_test/grid_run/14/mesh~coarse_input.e BISON_and_MESH_test/grid_run/15/mesh~coarse_input.e BISON_and_MESH_test/grid_run/16/mesh~coarse_input.e'
   csv = 'BISON_and_MESH_test/print_data.csv'
   required_executable = '../../../../bison/bison-%METHOD%'
   required_libraries = 'cubit'
 [../]

 [./MooseVPPInterface]
   type = 'RavenFramework'
   input = 'test_MOOSE_VPP.xml'
   output = 'MOOSEVPPInterface/grid_run/1/out~MooseVPP.e MOOSEVPPInterface/grid_run/2/out~MooseVPP.e MOOSEVPPInterface/grid_run/3/out~MooseVPP.e MOOSEVPPInterface/grid_run/4/out~MooseVPP.e'
   csv = 'MOOSEVPPInterface/print_data.csv'
   # Need to be able to check that cubit executable exists, but listing in required_executable
   # searches for existence of file then runs it. Running cubit by itself starts a cubit
   # command line that the test harness doesn't know how to deal with. For now, we're just
   # going to test for the existence of moose_test-opt to run.
   required_executable = '../../../../moose/modules/combined/modules-%METHOD%'
   rel_err = 0.0001
 [../]
 [./MAAP5interfaceForwardSampling]
   type = 'RavenFramework'
   input = 'test_maap5_code_interface_forward.xml'
   output = 'MAAP5_Forward_test/2-plotWWBBN_line.png MAAP5_Forward_test/3-plotWWBBN_line.png MAAP5_Forward_test/test_dataobject.csv MAAP5_Forward_test/test_dataobject.xml'
   csv = 'MAAP5_Forward_test/test_dataobject_2.csv'
   test_interface_only = True
   rel_err = 0.0001
 [../]
 [./MAAP5interfaceDETSampling]
   type = 'RavenFramework'
   input = 'test_maap5_code_interface_det.xml'
   output = 'MAAP5_DET_test/2-plotAFW_line.png MAAP5_DET_test/3-plotAFW_line.png MAAP5_DET_test/test_dataobject.csv MAAP5_DET_test/test_dataobject.xml'
   csv = 'MAAP5_DET_test/test_dataobject_3.csv'
   test_interface_only = True
   rel_err = 0.0001
 [../]
 [./MAAP5interfaceHybridDETSampling]
   type = 'RavenFramework'
   input = 'test_maap5_code_interface_hybrid_det.xml'
   output = 'MAAP5_HybridDET_test/7-plotAFW_line.png MAAP5_HybridDET_test/test_dataobject.csv MAAP5_HybridDET_test/test_dataobject.xml'
   csv = 'MAAP5_HybridDET_test/test_dataobject_3.csv'
   test_interface_only = True
   rel_err = 0.0001
 [../]
 [./MAAP5interfaceADETSampling]
   type = 'RavenFramework'
   input = 'test_maap5_code_interface_adaptive_det.xml'
   UnorderedCsv = 'MAAP5_adaptiveDET_test/limitSurfDump.csv'
   test_interface_only = True
   skip = 'Missing file needed to run'
   rel_err = 0.0001
 [../]
 [./MAAP5interfaceAHDETSampling]
   type = 'RavenFramework'
   input = 'test_maap5_code_interface_adaptive_hybrid_det.xml'
   UnorderedCsv = 'MAAP5_adaptiveHybridDET_test/limitSurfDump.csv'
   test_interface_only = True
   rel_err = 0.0001
 [../]
 [./MAAP5interfaceDETSamplingMultiBranch]
   type = 'RavenFramework'
   input = 'test_maap5_code_interface_det_multibranch.xml'
   output = 'MAAP5MultibranchTest/6-plotWWBBN_line.png MAAP5MultibranchTest/test_dataobject_7.csv'
   UnorderedCsv = 'MAAP5MultibranchTest/test_dataobject.csv'
   UnorderedXml = 'MAAP5MultibranchTest/test_dataobject.xml'
   test_interface_only = True
   rel_err = 0.0001
 [../]

 [./melcorInterfaceForwardSamplingNoExe]
   type = 'RavenFramework'
   input = 'test_melcor_interface.xml'
   output = 'MelcorInterface/dumpMelcorHistorySet_2.csv MelcorInterface/dumpMelcorHistorySet.csv'
   csv = 'MelcorInterface/dumpMelcorPointSet.csv'
   text = 'MelcorInterface/testMelcor/1/test.i'
   test_interface_only = True
   rel_err = 0.0001
 [../]
[]
