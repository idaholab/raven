<?xml version="1.0" ?>
<Simulation verbosity="debug">
  <TestInfo>
    <name>framework/hybridModel.logicalCode</name>
    <author>wangc</author>
    <created>2020-05-07</created>
    <classesTested>Models.LogicalModel</classesTested>
    <description>
      Example of usage of the Logical Model capability in RAVEN
      This test is intended to check the functionality of Logical Model
      with the generic code system. Two simple python codes is used to in this test.
      One is an exponetial function of input variables x and y, the other one is
      a polynomial function of input variables x and y. A control function "control"
      utilizes the input values of x and y to determine which code to run. If
      x > 0.5 and y > 1.5, the polynomical model 'poly' will be executed, otherwise
      the exponential model 'exp' will be executed.
    </description>
  </TestInfo>

  <RunInfo>
    <JobName>testLogicalCode</JobName>
    <Sequence>logicalModelCode</Sequence>
    <WorkingDir>logicalCode</WorkingDir>
    <batchSize>1</batchSize>
  </RunInfo>

  <Files>
    <Input name="gen.one" type="">gen.one</Input>
    <Input name="gen.two" type="">gen.two</Input>
  </Files>

  <Functions>
    <External file="control" name="control">
      <variables>x, y</variables>
    </External>
  </Functions>

  <Models>
    <Code name="poly" subType="GenericCode">
      <executable>logicalCode/poly_code.py</executable>
      <clargs arg="python" type="prepend"/>
      <clargs arg="-i" extension=".one" type="input"/>
      <fileargs arg="aux" extension=".two" type="input"/>
      <fileargs arg="output" type="output"/>
    </Code>
    <Code name="exp" subType="GenericCode">
      <executable>logicalCode/exp_code.py</executable>
      <clargs arg="python" type="prepend"/>
      <clargs arg="-i" extension=".one" type="input"/>
      <fileargs arg="aux" extension=".two" type="input"/>
      <fileargs arg="output" type="output"/>
    </Code>
    <LogicalModel name="logical" subType="">
      <Model class="Models" type="Code">poly</Model>
      <Model class="Models" type="Code">exp</Model>
      <ControlFunction class="Functions" type="External">control</ControlFunction>
    </LogicalModel>
  </Models>

  <Distributions>
    <Uniform name="xd">
      <lowerBound>0.0</lowerBound>
      <upperBound>1.0</upperBound>
    </Uniform>
    <Uniform name="yd">
      <lowerBound>1.0</lowerBound>
      <upperBound>2.0</upperBound>
    </Uniform>
  </Distributions>

  <Samplers>
    <Stratified name="LHS">
      <variable name="x">
        <distribution>xd</distribution>
        <grid construction="equal" steps="15" type="CDF">0.3 0.9</grid>
      </variable>
      <variable name="y">
        <distribution>yd</distribution>
        <grid construction="equal" steps="15" type="CDF">0.3 0.9</grid>
      </variable>
    </Stratified>
  </Samplers>

  <Steps>
    <MultiRun name="logicalModelCode">
      <Input class="Files" type="">gen.one</Input>
      <Input class="Files" type="">gen.two</Input>
      <Model class="Models" type="LogicalModel">logical</Model>
      <Sampler class="Samplers" type="Stratified">LHS</Sampler>
      <Output class="DataObjects" type="PointSet">samples</Output>
      <Output class="OutStreams" type="Print">samples</Output>
    </MultiRun>
  </Steps>

  <DataObjects>
    <PointSet name="samples">
      <Input>x,y</Input>
      <Output>poly</Output>
    </PointSet>
  </DataObjects>

  <OutStreams>
    <Print name="samples">
      <type>csv</type>
      <source>samples</source>
      <what>input, output</what>
    </Print>
  </OutStreams>

</Simulation>
