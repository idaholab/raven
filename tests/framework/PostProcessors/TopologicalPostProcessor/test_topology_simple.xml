<?xml version="1.0" ?>
<Simulation verbosity='debug'>
  <TestInfo>
    <name>framework/PostProcessors/TopologicalPostProcessor.topology_simple</name>
    <author>maljdan</author>
    <created>2015-09-02</created>
    <classesTested>PostProcessors.TopologicalDecomposition</classesTested>
    <description>
       A simple example of the approximate Morse-Smale complex (AMSC) interface
       using a test function consisting of a 2D Gaussian with a single maximum
       and 4 local minimum occurring at the corners of the domain space. The
       hill in the middle is purposefully off-centered so as to create
       non-uniform cases at each corner allowing us to simplify each local
       minimum in turn to create a 4 partition case, a 3 partition case, a 2
       partition case, and a single partition case.
    </description>
    <revisions>
      <revision author="cogljj" date="2015-09-29">Modifying external modules to use relative to working directory.</revision>
      <revision author="maljdan" date="2015-10-06">Correcting the user manual and reducing the sleepTime on these tests to reduce their total run time to ~15 s on my local machine.</revision>
      <revision author="talbpaul" date="2016-02-08">Converted failing tests.</revision>
      <revision author="maljdan" date="2016-04-06">Updating test cases to reflect the changes to the user input.</revision>
      <revision author="maljdan" date="2017-01-17">Adding test description.</revision>
    </revisions>
  </TestInfo>
  <RunInfo>
    <WorkingDir>data</WorkingDir>
    <Sequence>
      sampleData,
      decompose1,
      decompose2,
      decompose3,
      decompose4
    </Sequence>
  </RunInfo>

  <Models>
    <ExternalModel ModuleToLoad="../hill" name="testFunction" subType="">
      <variables>X,Y,Z</variables>
    </ExternalModel>
    <!-- 4 Clusters (no simplification) -->
    <PostProcessor name="AMSC1" subType="TopologicalDecomposition">
      <graph>Beta Skeleton</graph>
      <gradient>steepest</gradient>
      <beta>1</beta>
      <knn>8</knn>
      <normalization>None</normalization>
      <parameters>X,Y</parameters>
      <weighted>True</weighted>
      <response>Z</response>
    </PostProcessor>
    <!-- 3 Clusters -->
    <PostProcessor name="AMSC2" subType="TopologicalDecomposition">
      <graph>Beta Skeleton</graph>
      <gradient>steepest</gradient>
      <beta>1</beta>
      <knn>8</knn>
      <normalization>None</normalization>
      <parameters>X,Y</parameters>
      <response>Z</response>
      <simplification>0.005</simplification>
      <persistence>difference</persistence>
    </PostProcessor>
    <!-- 2 Clusters -->
    <PostProcessor name="AMSC3" subType="TopologicalDecomposition">
      <graph>Beta Skeleton</graph>
      <gradient>steepest</gradient>
      <beta>1</beta>
      <knn>8</knn>
      <normalization>None</normalization>
      <parameters>X,Y</parameters>
      <response>Z</response>
      <simplification>0.05</simplification>
      <persistence>difference</persistence>
    </PostProcessor>
    <!-- 1 Clusters -->
    <PostProcessor name="AMSC4" subType="TopologicalDecomposition">
      <graph>Beta Skeleton</graph>
      <gradient>steepest</gradient>
      <beta>1</beta>
      <knn>8</knn>
      <parameters>X,Y</parameters>
      <response>Z</response>
      <simplification>0.5</simplification>
      <persistence>difference</persistence>
    </PostProcessor>
  </Models>

  <Distributions>
    <Normal name="NormDist">
      <mean>2.5</mean>
      <sigma>2</sigma>
    </Normal>
  </Distributions>

  <Samplers>
    <Grid name="gridSampler">
      <variable name="X">
        <distribution>NormDist</distribution>
        <grid construction="equal" steps="10" type="value">0 10</grid>
      </variable>
      <variable name="Y">
        <distribution>NormDist</distribution>
        <grid construction="equal" steps="10" type="value">0 10</grid>
      </variable>
    </Grid>
  </Samplers>

  <Steps>
    <!-- Sample the data from the test function -->
    <MultiRun name="sampleData" pauseAtEnd="false" sleepTime="1e-5">
      <Input class="DataObjects" type="PointSet">dummyIN</Input>
      <Model class="Models" type="ExternalModel">testFunction</Model>
      <Sampler class="Samplers" type="Grid">gridSampler</Sampler>
      <Output class="DataObjects" type="PointSet">testData</Output>
    </MultiRun>
    <!-- Perform the topological decomposition -->
    <PostProcess name="decompose1">
      <Input class="DataObjects" type="PointSet">testData</Input>
      <Model class="Models" type="PostProcessor">AMSC1</Model>
      <Output class="DataObjects" type="PointSet">outTPS1</Output>
      <Output class="OutStreams" type="Print">myDump1</Output>
    </PostProcess>
    <PostProcess name="decompose2">
      <Input class="DataObjects" type="PointSet">testData</Input>
      <Model class="Models" type="PostProcessor">AMSC2</Model>
      <Output class="DataObjects" type="PointSet">outTPS2</Output>
      <Output class="OutStreams" type="Print">myDump2</Output>
    </PostProcess>
    <PostProcess name="decompose3">
      <Input class="DataObjects" type="PointSet">testData</Input>
      <Model class="Models" type="PostProcessor">AMSC3</Model>
      <Output class="DataObjects" type="PointSet">outTPS3</Output>
      <Output class="OutStreams" type="Print">myDump3</Output>
    </PostProcess>
    <PostProcess name="decompose4">
      <Input class="DataObjects" type="PointSet">testData</Input>
      <Model class="Models" type="PostProcessor">AMSC4</Model>
      <Output class="DataObjects" type="PointSet">outTPS4</Output>
      <Output class="OutStreams" type="Print">myDump4</Output>
    </PostProcess>
  </Steps>

  <OutStreams>
    <!-- A csv file containing the output of the example -->
    <Print name="myDump1">
      <type>csv</type>
      <source>outTPS1</source>
    </Print>
    <Print name="myDump2">
      <type>csv</type>
      <source>outTPS2</source>
    </Print>
    <Print name="myDump3">
      <type>csv</type>
      <source>outTPS3</source>
    </Print>
    <Print name="myDump4">
      <type>csv</type>
      <source>outTPS4</source>
    </Print>
  </OutStreams>

  <DataObjects>
    <!-- The input PointSet object -->
    <PointSet name="dummyIN">
      <Input>X,Y</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <PointSet name="testData">
      <Input>X,Y</Input>
      <Output>Z</Output>
    </PointSet>
    <!-- The output PointSet objects -->
    <PointSet name="outTPS1">
      <Input>X,Y</Input>
      <Output>Z</Output>
    </PointSet>
    <PointSet name="outTPS2">
      <Input>X,Y</Input>
      <Output>Z</Output>
    </PointSet>
    <PointSet name="outTPS3">
      <Input>X,Y</Input>
      <Output>Z</Output>
    </PointSet>
    <PointSet name="outTPS4">
      <Input>X,Y</Input>
      <Output>Z</Output>
    </PointSet>
  </DataObjects>

</Simulation>
