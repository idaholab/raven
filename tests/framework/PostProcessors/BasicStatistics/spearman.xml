<?xml version="1.0" ?>
<Simulation verbosity="debug">
  <RunInfo>
    <WorkingDir>basicStatsSpearman</WorkingDir>
    <batchSize>1</batchSize>
    <Sequence>sample,PP</Sequence>
  </RunInfo>

  <TestInfo>
    <name>framework/PostProcessors/BasicStatistics.spearman</name>
    <author>alfonsi</author>
    <created>2021-05-06</created>
    <classesTested>PostProcessors.BasicStatistics</classesTested>
    <description>
      This test checks the separman coefficients calculated by basic statistics PP.
      The weighted form is used and this
      test allows for the comparison with the unweighted one that
      is available in scipy (since we are using a a MonteCarlo here).
    </description>
  </TestInfo>

  <DataObjects>
    <PointSet name="dummyIN">
      <Input>x1,x2,x3,x4,x5</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <PointSet name="collset">
      <Input>x1,x2,x3,x4,x5</Input>
      <Output>ans</Output>
    </PointSet>
    <PointSet name="InputOutput_basicStatPP">
      <Output>InputOutput_vars</Output>
    </PointSet>
  </DataObjects>

  <Distributions>
    <Normal name="NDist1">
      <mean>0.5</mean>
      <sigma>0.1</sigma>
    </Normal>
    <Normal name="NDist2">
      <mean>-0.4</mean>
      <sigma>1.8</sigma>
    </Normal>
    <Normal name="NDist3">
      <mean>0.3</mean>
      <sigma>3</sigma>
    </Normal>
    <Normal name="NDist4">
      <mean>-0.2</mean>
      <sigma>1.0</sigma>
    </Normal>
    <Normal name="NDist5">
      <mean>0.1</mean>
      <sigma>0.1</sigma>
    </Normal>
  </Distributions>

  <Samplers>
    <MonteCarlo name="MC_external">
      <samplerInit>
        <limit>1000</limit>
        <initialSeed>1234</initialSeed>
        <reseedEachIteration>True</reseedEachIteration>
      </samplerInit>
      <variable name="x1">
        <distribution>NDist1</distribution>
      </variable>
      <variable name="x2">
        <distribution>NDist2</distribution>
      </variable>
      <variable name="x3">
        <distribution>NDist3</distribution>
      </variable>
      <variable name="x4">
        <distribution>NDist4</distribution>
      </variable>
      <variable name="x5">
        <distribution>NDist5</distribution>
      </variable>
    </MonteCarlo>
  </Samplers>

  <Models>
    <ExternalModel ModuleToLoad="../basicStatsSensitivity/poly.py" name="poly" subType="">
      <variables>x1,x2,x3,x4,x5,ans</variables>
    </ExternalModel>
    <PostProcessor name="InputOutput" subType="BasicStatistics" verbosity="debug">
      <spearman prefix="spear">
        <targets>ans,x1,x2,x3,x4,x5</targets>
        <features>x1,x2,x3,x4,x5</features>
      </spearman>
    </PostProcessor>
  </Models>

  <Steps>
    <MultiRun name="sample" sleepTime="1e-4">
      <Input class="DataObjects" type="PointSet">dummyIN</Input>
      <Model class="Models" type="ExternalModel">poly</Model>
      <Sampler class="Samplers" type="SparseGridCollocation">MC_external</Sampler>
      <Output class="DataObjects" type="PointSet">collset</Output>
    </MultiRun>
    <PostProcess name="PP">
      <Input class="DataObjects" type="PointSet">collset</Input>
      <Model class="Models" type="PostProcessor">InputOutput</Model>
      <Output class="DataObjects" type="PointSet">InputOutput_basicStatPP</Output>
      <Output class="OutStreams" type="Print">InputOutput_basicStatPP_dump</Output>
    </PostProcess>
  </Steps>

  <OutStreams>
    <Print name="csv_database">
      <type>csv</type>
      <source>collset</source>
    </Print>
    <Print name="InputOutput_basicStatPP_dump">
      <type>csv</type>
      <source>InputOutput_basicStatPP</source>
      <what>input,output</what>
    </Print>
  </OutStreams>

  <VariableGroups>
    <Group name="InputOutput_vars">
                 spear_ans_x1,
                 spear_ans_x2,
                 spear_ans_x3,
                 spear_ans_x4,
                 spear_ans_x5,
                 spear_x1_x1,
                 spear_x1_x2,
                 spear_x1_x3,
                 spear_x1_x4,
                 spear_x1_x5,
                 spear_x2_x1,
                 spear_x2_x2,
                 spear_x2_x3,
                 spear_x2_x4,
                 spear_x2_x5,
                 spear_x3_x1,
                 spear_x3_x2,
                 spear_x3_x3,
                 spear_x3_x4,
                 spear_x3_x5,
                 spear_x4_x1,
                 spear_x4_x2,
                 spear_x4_x3,
                 spear_x4_x4,
                 spear_x4_x5,
                 spear_x5_x1,
                 spear_x5_x2,
                 spear_x5_x3,
                 spear_x5_x4,
                 spear_x5_x5,
                 </Group>
  </VariableGroups>

</Simulation>
