<?xml version="1.0" ?>
<Simulation verbosity="debug">
  <RunInfo>
    <WorkingDir>basicStatisticsGeneral</WorkingDir>
    <Sequence>FirstMRun,PP1,PP2,PP3,PP4,PP5,PP6</Sequence>
    <batchSize>1</batchSize>
  </RunInfo>
  <TestInfo>
    <name>framework/PostProcessors/BasicStatistics/general</name>
    <author>alfoa</author>
    <created>2014-05-21</created>
    <classesTested>PostProcessors.BasicStatistics</classesTested>
    <description>
      This requirements test checks operation of the basic statistics postprocessor.
    </description>
    <requirements>R-RA-5</requirements>
  </TestInfo>

  <Files>
    <Input name="basicStatisticsExternalModelTest.py" type="">basicStatisticsExternalModelTest.py</Input>
    <Input name="autoCorrelated.xml"    type="">autoCorrelated.xml</Input>
    <Input name="unCorrelated.xml"      type="">unCorrelated.xml</Input>
    <Input name="inverseCorrelated.xml" type="">inverseCorrelated.xml</Input>
    <Input name="inputOutput.xml"       type="">inputOutput.xml</Input>
    <Input name="infinite.xml"          type="">infinite.xml</Input>
    <Input name="matrixComputable.xml"  type="">matrixComputable.xml</Input>
  </Files>

  <Models>
    <ExternalModel ModuleToLoad="basicStatisticsGeneral/basicStatisticsExternalModelTest" name="PythonModule" subType="">
      <variables>x,y,z,time,x0,x01,x02,y0,y02,y01,z0,z02,z01</variables>
    </ExternalModel>
    <PostProcessor name="autoCorrelationTest" subType="BasicStatistics" verbosity="debug">
      <!--
         =&gt; you can here specify what type of figure of merit you need to compute
        <what>expectedValue,sigma,variance,kurtois,pearson,covariance</what>
      -->
      <methodsToRun>failureProbability</methodsToRun>
      <expectedValue>x01,x02</expectedValue>
    </PostProcessor>
    <PostProcessor name="NotCorrellatedTest" subType="BasicStatistics" verbosity="debug">
      <biased>true</biased>
      <all>
        <targets>y01,y02</targets>
        <features>y01,y02</features>
      </all>
    </PostProcessor>
    <PostProcessor name="InverseCorrelatedTest" subType="BasicStatistics" verbosity="debug">
      <all>
        <targets>z01,z02</targets>
        <features>z01,z02</features>
      </all>
    </PostProcessor>
    <PostProcessor name="InputOutput" subType="BasicStatistics" verbosity="debug">
      <all>
        <targets>x0,x01,y0,y02</targets>
        <features>x0,x01,y0,y02</features>
      </all>
    </PostProcessor>
    <PostProcessor name="checkIfMatrixCanBeComputed" subType="BasicStatistics" verbosity="debug">
      <all>
        <targets>x</targets>
        <features>x</features>
      </all>
    </PostProcessor>
    <PostProcessor name="CreateInfinity" subType="BasicStatistics" verbosity="debug">
      <all>
        <targets>time,x0,y0,y02</targets>
        <features>time,x0,y0,y02</features>
      </all>
    </PostProcessor>
  </Models>

  <Functions>
    <External file="basicStatisticsGeneral/testFunctionComputeProbability" name="testFunctionComputeProbability">
      <variable>x01</variable>
    </External>
  </Functions>

  <Distributions>
    <Normal name="x0_distrib">
      <mean>4</mean>
      <sigma>1</sigma>
    </Normal>
    <Normal name="y0_distrib">
      <mean>100</mean>
      <sigma>1</sigma>
    </Normal>
    <Normal name="z0_distrib">
      <mean>4</mean>
      <sigma>1</sigma>
    </Normal>
  </Distributions>

  <Samplers>
    <MonteCarlo name="MC_external">
      <samplerInit>
        <limit>4</limit>
      </samplerInit>
      <variable name="x0">
        <distribution>x0_distrib</distribution>
      </variable>
      <variable name="y0">
        <distribution>y0_distrib</distribution>
      </variable>
      <variable name="z0">
        <distribution>z0_distrib</distribution>
      </variable>
    </MonteCarlo>
  </Samplers>

  <Steps>
    <MultiRun name="FirstMRun" re-seeding="25061978">
      <Input class="Files" type="">basicStatisticsExternalModelTest.py</Input>
      <Model class="Models" type="ExternalModel">PythonModule</Model>
      <Sampler class="Samplers" type="MonteCarlo">MC_external</Sampler>
      <Output class="DataObjects" type="PointSet">PointSetPostProcTest</Output>
      <Output class="OutStreams" type="Print">PointSetPostProcTest_dump</Output>
    </MultiRun>
    <PostProcess name="PP1">
      <Input class="DataObjects" type="PointSet">PointSetPostProcTest</Input>
      <Function class="Functions" type="External">testFunctionComputeProbability</Function>
      <Model class="Models" type="PostProcessor">autoCorrelationTest</Model>
      <Output class="Files" type="">autoCorrelated.xml</Output>
    </PostProcess>
    <PostProcess name="PP2">
      <Input class="DataObjects" type="PointSet">PointSetPostProcTest</Input>
      <Model class="Models" type="PostProcessor">NotCorrellatedTest</Model>
      <Output class="Files" type="">unCorrelated.xml</Output>
    </PostProcess>
    <PostProcess name="PP3">
      <Input class="DataObjects" type="PointSet">PointSetPostProcTest</Input>
      <Model class="Models" type="PostProcessor">InverseCorrelatedTest</Model>
      <Output class="Files" type="">inverseCorrelated.xml</Output>
    </PostProcess>
    <PostProcess name="PP4">
      <Input class="DataObjects" type="PointSet">PointSetPostProcTest</Input>
      <Model class="Models" type="PostProcessor">InputOutput</Model>
      <Output class="Files" type="">inputOutput.xml</Output>
    </PostProcess>
    <PostProcess name="PP5">
      <Input class="DataObjects" type="PointSet">PointSetPostProcTest</Input>
      <Model class="Models" type="PostProcessor">CreateInfinity</Model>
      <Output class="Files" type="">infinite.xml</Output>
    </PostProcess>
    <PostProcess name="PP6">
      <Input class="DataObjects" type="PointSet">PointSetPostProcTest</Input>
      <Model class="Models" type="PostProcessor">checkIfMatrixCanBeComputed</Model>
      <Output class="Files" type="">matrixComputable.xml</Output>
    </PostProcess>
  </Steps>

  <OutStreams>
    <Print name="PointSetPostProcTest_dump">
      <type>csv</type>
      <source>PointSetPostProcTest</source>
    </Print>
  </OutStreams>

  <DataObjects>
    <PointSet name="PointSetPostProcTest">
      <Input>x0,y0,z0</Input>
      <Output>time,x02,y02,z02,x01,y01,z01,x,y,z</Output>
    </PointSet>
  </DataObjects>

</Simulation>
