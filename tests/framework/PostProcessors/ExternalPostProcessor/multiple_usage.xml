<?xml version="1.0" ?>
<Simulation verbosity="debug">
  <TestInfo>
    <name>framework/PostProcessors/ExternalPostProcessor.multiple_usage</name>
    <author>maljdan</author>
    <created>2015-06-28</created>
    <classesTested>PostProcessors.ExternalPostProcessor</classesTested>
    <description>
      A simple example of writing an external python function and using it
      inside RAVEN. Here we are testing whether using the same external
      processor on multiple data objects does not cause naming issues.
    </description>
    <revisions>
        <revision author="alfoa" date="2019-03-07">Modified syntax in Functions as for issue #934</revision>
    </revisions>
  </TestInfo>

  <RunInfo>
    <WorkingDir>externalPostProcessor</WorkingDir>
    <Sequence>
      loadData,
      test1,
      test2
    </Sequence>
  </RunInfo>

  <Files>
    <Input name="csv" type="">data.csv</Input>
  </Files>

  <Models>
    <PostProcessor name="functionPP" subType="External" verbosity="debug">
      <method>Delta,Sum,Product</method>
      <Function class="Functions" type="External">basicOps</Function>
    </PostProcessor>
  </Models>

  <!-- The external methods will be defined in the files pointed to by these
     guys -->
  <Functions>
    <External file="externalPostProcessor/BasicOperators" name="basicOps">
      <variables>X,Y</variables>
    </External>
  </Functions>

  <Steps>
    <!-- Read the data from a csv into a dataObject -->
    <IOStep fromDirectory="." name="loadData">
      <Input class="Files" type="">csv</Input>
      <Output class="DataObjects" type="PointSet">testData</Output>
    </IOStep>
    <!-- Run the post-processor and get the sums and products -->
    <PostProcess name="test1">
      <Input class="DataObjects" type="PointSet">testData</Input>
      <Model class="Models" type="PostProcessor">functionPP</Model>
      <Output class="DataObjects" type="PointSet">functionPP_data1</Output>
      <Output class="OutStreams" type="Print">dump1</Output>
    </PostProcess>
    <!-- Run the post-processor again and get the deltas and products -->
    <PostProcess name="test2">
      <Input class="DataObjects" type="PointSet">testData</Input>
      <Model class="Models" type="PostProcessor">functionPP</Model>
      <Output class="DataObjects" type="PointSet">functionPP_data2</Output>
      <Output class="OutStreams" type="Print">dump2</Output>
    </PostProcess>
  </Steps>

  <OutStreams>
    <!-- A csv file containing the output of the example -->
    <Print name="dump1">
      <filename>multiple_usage_1</filename>
      <type>csv</type>
      <source>functionPP_data1</source>
    </Print>
    <Print name="dump2">
      <filename>multiple_usage_2</filename>
      <type>csv</type>
      <source>functionPP_data2</source>
    </Print>
  </OutStreams>

  <Databases>
    <HDF5 name="myDB" readMode="overwrite"/>
  </Databases>

  <DataObjects>
    <!-- The input PointSet objects -->
    <PointSet name="testData">
      <Input>X,Y</Input>
      <Output>Z</Output>
    </PointSet>
    <!-- The output PointSet object -->
    <PointSet name="functionPP_data1">
      <Input>X,Y</Input>
      <Output>Z,basicOps_Sum,basicOps_Product</Output>
    </PointSet>
    <PointSet name="functionPP_data2">
      <Input>X,Y</Input>
      <Output>Z,basicOps_Delta,basicOps_Product</Output>
    </PointSet>
  </DataObjects>

</Simulation>
