[Tests]
 [./pcaResponseSurface]
  type = 'RavenFramework'
  input = 'test_pca_responseSurface.xml'
  csv = 'responseSurfacePCA/BoxBehnkenRespDesign_dump.csv responseSurfacePCA/CentralCompositeRespDesign_dump.csv'
  max_time = 500
  rel_err = 0.001
 [../]

 [./simple_framework]
  #REQUIREMENT_TEST R-IS-2
  type = 'RavenFramework'
  input = 'test_simple.xml'
  output = 'revirD_tset/FirstMRun/1/out~ideal_pump revirD_tset/FirstMRun/6/out~ideal_pump'
  csv = 'revirD_tset/FirstMRun/6/out~ideal_pump.csv'
  required_executable = '../../RAVEN-%METHOD%'
 [../]

 [./2steps_same_db]
   #REQUIREMENT_TEST R-IS-3
   type = 'RavenFramework'
   input = 'test_2steps_same_db.xml'
   csv = 'test_2steps/fullprint_HistorySet_3.csv'
   UnorderedXml = 'test_2steps/fullprint_HistorySet.xml'
 [../]

 [./external_xml]
   type = 'RavenFramework'
   input = 'test_External_XML.xml'
   output = 'ExternalXMLTest/outGrid_dump.xml'
   csv = 'ExternalXMLTest/outGrid_dump.csv'
 [../]
 [./getpot_with_externalXML]
   type = 'RavenFramework'
   input = 'test_getpot_ext.i'
   output = 'ExternalXMLTest/outGrid_dump.xml'
   csv = 'ExternalXMLTest/outGrid_dump.csv'
   prereq = external_xml
 [../]

 ## This test will exercise our ability to parse command line options
 [./simple_command_line_args]
   type = 'RavenFramework'
   input = 'test_simple.xml quiet silent all quiet'
   output = 'revirD_tset/FirstMRun/1/out~ideal_pump revirD_tset/FirstMRun/6/out~ideal_pump'
   csv = 'revirD_tset/FirstMRun/6/out~ideal_pump.csv'
   required_executable = '../../RAVEN-%METHOD%'
   ## Skip this test, if its duplicated failed
   prereq = simple_framework
 [../]

 [./test_output]
  #REQUIREMENT_TEST R-RA-3
  type = 'RavenFramework'
  input = 'test_output.xml'
  output = 'output_check/1-plot7_stem.png output_check/1-2DHistoryPlot_histogram.png output_check/1-test_line-line.png output_check/1-plot2_line-line.png output_check/1-plot4_scatter-scatter.png output_check/1-plot3_scatter-scatter.png output_check/1-plot9_stem.png output_check/1-plot8_stem.png output_check/1-plot6_histogram.png output_check/1-plot5_histogram.png output_check/1-plot11_step.png output_check/1-plot10_stem.png output_check/1-plot14_tri-surface-tri-surface.png output_check/1-plot13_surface-surface.png output_check/1-plot12_pseudocolor.png output_check/1-plot17_contour3D-filledContour3D.png output_check/1-plot16_contour-filledContour.png output_check/1-plot15_wireframe-wireframe.png output_check/1-plot18_scatter.png output_check/1-plot19_scatter.png output_check/fullprint_Pointset.csv'
  csv = 'output_check/fullprint_HistorySet_2.csv output_check/test_4.csv output_check/testprint_selective_hist1_4.csv output_check/testprint_selective_hist2_4.csv output_check/testprint_selective_hist3_4.csv output_check/testprint_selective_Pointset.csv'
  xml = 'output_check/fullprint_HistorySet.xml output_check/fullprint_Pointset.xml'
  remove_unicode_identifier = true
 [../]

 [./test_push_into_hdf5]
  type = 'RavenFramework'
  input = 'test_push_into_hdf5.xml'
  csv = 'test_extract_data_s_from_hdf5/Pointset_from_database_dump.csv test_extract_data_s_from_hdf5/Pointset_IN_database_dump.csv'
  max_time = 500
  rel_err = 0.01
 [../]

 [./test_merge_2_databases]
  type = 'RavenFramework'
  input = 'test_merge_2_databases.xml'
  csv = 'test_merge_2_databases/Pointset_from_database_dump.csv test_merge_2_databases/Pointset_IN_database_dump.csv
  test_merge_2_databases/Historyset_from_database_dump_0.csv test_merge_2_databases/Historyset_from_database_dump_1.csv test_merge_2_databases/Historyset_IN_database_dump_0.csv test_merge_2_databases/Historyset_IN_database_dump_1.csv test_merge_2_databases/Historyset_IN_database_dump_2.csv test_merge_2_databases/Historyset_IN_database_dump_3.csv'
 [../]

 [./test_rom_trainer_raven]
  type = 'RavenFramework'
  input = 'test_rom_trainer_raven.xml'
  #skip = 'working in progress'
  output = 'test_rom_trainer_raven/MC_for_rom_trainer/out~1~TMI test_rom_trainer_raven/MC_for_rom_trainer/out~2~TMI.csv'
  csv = 'test_rom_trainer_raven/outputMontecarloRom_dump.csv test_rom_trainer_raven/outputMontecarloRomND_dump.csv'
  max_time = 1500
  rel_err = 0.001
  required_executable = '../../RAVEN-%METHOD%'
  skip = 'Relap issue #111'
 [../]

[./test_rom_trainer]
  #REQUIREMENT_TEST R-RA-4
  type = 'RavenFramework'
  input = 'test_rom_trainer.xml'
  #skip = 'working in progress'
  UnorderedCsv = 'test_rom_trainer/outputMontecarloRom_dump.csv test_rom_trainer/outputMontecarloRomND_dump.csv'
  max_time = 1500
  rel_err = 0.001
 [../]

 [./test_multi_target_rom]
  type = 'RavenFramework'
  input = 'test_multi_target_rom.xml'
  csv = 'test_rom_trainer/outputMontecarloMultiTargetRom_dump.csv test_rom_trainer/outputMontecarloMultiTargetRomND_dump.csv'
  max_time = 1500
  rel_err = 0.001
 [../]


 [./test_rom_train_from_already_dumped_HDF5]
  type = 'RavenFramework'
  input = 'test_rom_train_from_already_dumped_HDF5.xml'
  #skip = 'working in progress'
  output=''
  csv = 'test_rom_trainer/outputMontecarloRom_dump2.csv'
  max_time = 1000
  rel_err = 0.001
  prereq = test_rom_trainer
 [../]

 [./testFactorials]
  type = 'RavenFramework'
  input = 'test_FullFactorial_Sampler.xml'
  csv = 'Factorial/2levelFact_dump.csv Factorial/fullFact_dump.csv Factorial/pb_dump.csv'
  max_time = 500
  rel_err = 0.001
 [../]

 [./testResponseSurfaceDesigns]
  type = 'RavenFramework'
  input = 'test_ResponseSurfaceDesign_Sampler.xml'
  csv = 'ResponseDesign/BoxBehnkenRespDesign_dump.csv ResponseDesign/CentralCompositeRespDesign_dump.csv'
  max_time = 500
  rel_err = 0.001
 [../]

 [./testGrid]
  #REQUIREMENT_TEST R-RE-3
  type = 'RavenFramework'
  input = 'test_Grid_Sampler.xml'
  csv = 'GridTest/outGrid_dump.csv'
  max_time = 500
  rel_err = 0.001
 [../]

 [./testGridWithConstants]
  type = 'RavenFramework'
  input = 'test_Grid_Sampler_with_constants.xml'
  csv = 'GridTestWithConstants/outGrid_dump.csv'
  max_time = 500
  rel_err = 0.001
 [../]

 [./testGrid_GetPot]
  type = 'RavenFramework'
  input = 'test_Grid_Sampler.i'
  csv = 'GridTest_GetPot/outGrid_dump.csv'
  max_time = 500
  rel_err = 0.001
 [../]

 [./testRandom]
  type = 'RavenFramework'
  input = 'test_random.xml'
  csv = 'RandomTest/outSet_dump.csv'
  max_time = 500
  rel_err = 0.001
 [../]

 [./testLHS]
  type = 'RavenFramework'
  input = 'test_LHS_Sampler.xml'
  csv = 'LHStest/outLHS_dump.csv LHStest/samples1D.csv'
  xml = 'LHStest/outLHS_dump.xml LHStest/samples1D.xml'
  max_time = 500
  rel_err = 0.001
  remove_unicode_identifier = true
 [../]

 [./testLHS_RELAP7]
   type = 'RavenFramework'
   input = 'test_LHS_Sampler_Raven.xml'
   output = 'LHStestRaven/FirstMRun/1/out~clg_massflowrate_3eqn'
   csv = 'LHStestRaven/outGrid_dump.csv'
   method = 'devel opt'
   required_executable = '../../RAVEN-%METHOD%'
 [../]

 [./testGrid_RELAP7]
   type = 'RavenFramework'
   input = 'test_Grid_Sampler_Raven.xml'
   output = 'GridTestRaven/FirstMRun/1/out~clg.massflowrate.3eqn'
   UnorderedCsv = 'GridTestRaven/outGrid_dump.csv GridTestRaven/outGridMax_dump.csv GridTestRaven/outGridMin_dump.csv GridTestRaven/outGridAverage_dump.csv GridTestRaven/outGridMaxFromHDF5_dump.csv GridTestRaven/outGridMinFromHDF5_dump.csv GridTestRaven/outGridAverageFromHDF5_dump.csv'
   method = 'devel opt'
   required_executable = '../../RAVEN-%METHOD%'
 [../]


 [./testExternalModel]
  #REQUIREMENT_TEST R-IS-4
  type = 'RavenFramework'
  input = 'test_Lorentz.xml'
  output = 'externalModel/testPrintHistorySet_dump_0.csv externalModel/testPrintHistorySet_dump_1.csv externalModel/testPrintHistorySet_dump_2.csv externalModel/testPointSet_dump.csv'
  max_time = 500
  rel_err = 0.001
 [../]

 [./testExternalModelReseed]
  type = 'RavenFramework'
  input = 'test_external_reseed.xml'
  output = 'externalModel/testPrintHistorySet_dump_0.csv externalModel/testPrintHistorySet_dump_1.csv externalModel/testPrintHistorySet_dump_2.csv'
  max_time = 100
  rel_err = 0.001
 [../]

 [./testLimitSurfacePostProcessor]
  #REQUIREMENT_TEST R-RA-1
  type = 'RavenFramework'
  input = 'test_LimitSurface.xml'
  csv = 'limitSurface/LimitSurfaceNegative_dump.csv limitSurface/LimitSurfacePositiveNegative_dump.csv limitSurface/LimitSurfacePositive_dump.csv'
  max_time = 300
  rel_err = 0.0001
  #skip = ‘need to be fixed’
 [../]

 [./testLimitSurfaceIntegralPP]
  type = 'RavenFramework'
  input = 'test_LimitSurface_and_integral.xml'
  output = 'limitSurface_integral/LimitSurfaceUnWeightedPb_dump.xml limitSurface_integral/LimitSurfaceWeightedPb_dump.xml'
  csv = 'limitSurface_integral/LimitSurfaceWeightedPb_FileObj.csv limitSurface_integral/LimitSurfaceUnWeightedPb_FileObj.csv limitSurface_integral/LimitSurfaceWeightedPb_dump.csv limitSurface_integral/LimitSurfaceUnWeightedPb_dump.csv'
  max_time = 300
  rel_err = 0.0001
  #skip = ‘need to be fixed’
 [../]

 [./testLimitSurfaceMultiGridSampling]
  type = 'RavenFramework'
  input = 'test_limitSurfaceMultiGridMethod.xml'
  csv = 'limitSurfaceMultiGrid/limitSurfaceTwoIslandsCSV.csv'
  max_time = 300
  rel_err = 0.0001
 [../]

 [./test_bison_mc_simple_and_alias_system]
  #REQUIREMENT_TEST R-IS-6
  type = 'RavenFramework'
  input = 'test_bison_mc_simple.xml'
  output = 'MCTestBison/CustomSampler/1/out~gap_perfect_transfer_test'
  csv = 'MCTestBison/CustomSampler/3/out~gap_perfect_transfer_test.csv MCTestBison/CustomSampler/1/out~gap_perfect_transfer_test.csv MCTestBison/CustomSampler_noalias/3/out~gap_perfect_transfer_test.csv MCTestBison/CustomSampler_noalias/1/out~gap_perfect_transfer_test.csv'
  required_executable = '../../../bison/bison-%METHOD%'
  skip_if_env = BUILD_ROOT
 [../]

 [./test_custom_mode]
  type = 'RavenFramework'
  input = 'test_custom_mode.xml'
  output = 'mode_test/FirstMRun/1/out~pump_fake mode_test/FirstMRun/2/out~pump_fake'
  csv = 'mode_test/FirstMRun/2/out~pump_fake.csv'
 [../]

 [./test_distributions]
  #REQUIREMENT_TEST R-RE-1
  type = 'RavenPython'
  #python_command = python3
  input = '../../framework/TestDistributions.py'
  requires_swig2 = True
 [../]

 [./unit_test_Files]
  type = 'RavenPython'
  input = '../../framework/TestFiles.py'
 [../]

 [./test_xsd_input_data]
  type = 'RavenPython'
  input = 'TestXSD/TestDataRead.py'
  requires_swig2 = True
 [../]

 [./test_strict_input_data]
  type = 'RavenPython'
  input = 'TestXSD/TestStrictCheck.py'
  requires_swig2 = True
 [../]

 [./test_xsd_input_fails]
  type = 'RavenPython'
  input = 'TestXSD/TestFails.py'
  requires_swig2 = True
  required_libraries = lxml
  prereq = test_xsd_input_data
 [../]

 [./test_xml_differ]
  type = 'RavenPython'
  input = 'TestDiffer/TestXMLDiffer.py'
 [../]

 [./test_iostep_load]
   #REQUIREMENT_TEST R-RA-2
   type = 'RavenFramework'
   input = 'test_iostep_load.xml'
   output = 'test_iostep_load/reprint_HistorySet.csv'
   csv = 'test_iostep_load/reprint_HistorySet_1.csv test_iostep_load/reprint_Pointset.csv'
   xml = 'test_iostep_load/reprint_HistorySet.xml'
   prereq = test_output
   remove_unicode_identifier = true
   remove_whitespace = true
 [../]

 [./load_and_push_reusing_same_hdf5]
   type = 'RavenFramework'
   input = 'test_load_and_push_reusing_same_hdf5.xml'
   output = 'GridTestSameHDF5/MonteCarloRestarted/1/out~massflowrate_fake GridTestSameHDF5/outGrid_dump.csv GridTestSameHDF5/outGridMax_dump.csv GridTestSameHDF5/outGridMin_dump.csv GridTestSameHDF5/outGridAverage_dump.csv GridTestSameHDF5/stories2_dump_4.csv'
   prereq = testGrid
   method = 'devel opt'
 [../]

 [./adaptive_sampler_ext_model]
  type = 'RavenFramework'
  input = 'test_adaptive_sampler.xml'
  csv = 'Adapt/limitSurfaceDump.csv'
 [../]

 [./safest_point_pp]
  type = 'RavenFramework'
  input = 'test_safest_point.xml'
  csv = 'SafestPointPP/sfs_pnt_dmp.csv SafestPointPP/lmt_srf_dmp.csv'
 [../]


 [./safest_point_cdf_pp]
  type = 'RavenFramework'
  input = 'test_safest_point_cdf.xml'
  csv = 'SafestPointPP_cdf/sfs_pnt_cdf_dmp.csv SafestPointPP_cdf/lmt_srf_dmp.csv'
 [../]

 [./ND_external_MC]
  #REQUIREMENT_TEST R-RE-2
  type = 'RavenFramework'
  input = 'test_simple_ND_external_MC.xml'
  csv = 'ND_test_MC/testPrintPointSet_dump.csv'
 [../]

 [./stochPolyInterpTest]
  type = 'RavenFramework'
  input = 'test_stochpoly_interp.xml'
  output = 'StochasticPolyInterpTest/Ndump.xml'
  csv = 'StochasticPolyInterpTest/Ndump.csv'
 [../]

 [./ND_external_LHS]
  type = 'RavenFramework'
  input = 'test_simple_ND_external_LHS.xml'
  csv = 'ND_test_LHS/testPrintPointSet_dump.csv'
  xml = 'ND_test_LHS/testPrintPointSet_dump.xml'
  remove_unicode_identifier = true
 [../]

 [./ND_external_grid_value]
  type = 'RavenFramework'
  input = 'test_simple_ND_external_grid_value.xml'
  csv = 'ND_test_Grid_value/testPrintPointSet_dump.csv'
 [../]

 [./ND_external_grid_cdf]
  type = 'RavenFramework'
  input = 'test_simple_ND_external_grid_cdf.xml'
  csv = 'ND_test_Grid_cdf/testPrintPointSet_dump.csv'
 [../]

 [./ND_test_MC_MVN]
  type = 'RavenFramework'
  input = 'test_simple_ND_external_MC_MVN.xml'
  csv = 'ND_test_MC_MVN/testPrintPointSet_dump.csv'
 [../]

 [./test_comparison_statistics]
   type = 'RavenFramework'
   input = 'test_cc_stats.xml'
   output = 'test_cc_stats/output.csv'
   csv = 'test_cc_stats/output_fullprint_Pointset_outputs_normal1_0.csv test_cc_stats/output_fullprint_Pointset_outputs_normal1_1.csv test_cc_stats/output_fullprint_Pointset_outputs_normal2_0.csv test_cc_stats/output_fullprint_Pointset_outputs_normal2_1.csv test_cc_stats/output_fullprint_Pointset_outputs_uniform1_fullprint_Pointset_outputs_uniform2p_0.csv test_cc_stats/output_fullprint_Pointset_outputs_uniform1_fullprint_Pointset_outputs_uniform2p_1.csv'
 [../]

 [./dists_vars]
   type = 'RavenFramework'
   input = 'test_distribution_combination.xml'
   csv = 'dists_vars/PrintPointSet_dump.csv'
 [../]

 [./redundantInputs]
   type = 'RavenFramework'
   input = 'test_redundant_inputs.xml'
   output = 'RedundantInputs/mc_out.xml RedundantInputs/grid_out.xml'
   csv = 'RedundantInputs/mc_out.csv RedundantInputs/grid_out.csv'
 [../]
 [./redundantInputsSCgPC]
   type = 'RavenFramework'
   input = 'test_redundant_scgpc.xml'
   output = 'RedundantInputs/sc_out.xml'
   UnorderedCsv = 'RedundantInputs/sc_out.csv'
 [../]
 [./redundantInputsSobol]
   type = 'RavenFramework'
   input = 'test_redundant_sobol.xml'
   output = 'RedundantInputs/hdmr_out.xml'
   UnorderedCsv = 'RedundantInputs/hdmr_out.csv'
 [../]

 [./failrunsMC]
   type = 'RavenFramework'
   input = 'test_failruns_MC.xml'
   output = 'RunFailures/MCdump.xml RunFailures/MCdumpC.xml'
   csv = 'RunFailures/MCdump.csv RunFailures/MCdumpC.csv'
 [../]


 [./NDGridProbabilityWeightCDF]
  type = 'RavenFramework'
  input = 'test_simple_ND_grid_probabilityWeight_cdf.xml'
  csv = 'NDGridPWcdf/testPrintPointSet_dump.csv'
 [../]

 [./NDGridProbabilityWeightValue]
  type = 'RavenFramework'
  input = 'test_simple_ND_grid_probabilityWeight_value.xml'
  csv = 'NDGridPWvalue/testPrintPointSet_dump.csv'
 [../]

 [./LHSVariables]
  type = 'RavenFramework'
  input = 'test_LHS_variables.xml'
  csv = 'LHStestVariables/outLHS_dump.csv'
  xml = 'LHStestVariables/outLHS_dump.xml'
  remove_unicode_identifier = true
 [../]

 [./fail_csv]
   type = 'RavenFramework'
   input = test_simple_fail_csv.xml
   csv = 'fail_csv/PrintRawPointSet.csv'
   expected_fail = true
 [../]

 [./fail_xml]
   type = 'RavenFramework'
   input = test_simple_fail_xml.xml
   xml = 'fail_xml/PrintRawPointSet.xml'
   expected_fail = true
 [../]

 [./calculate_and_transfer]
   #REQUIREMENT_TEST R-IS-5
   type = 'RavenFramework'
   input = 'test_calc_and_transfer.xml'
   csv = 'calc_and_transfer/output_RawPointSet_outputs_out1_ROM1PointSet_outputs_out1_0.csv calc_and_transfer/output_RawPointSet_outputs_out1_ROM1PointSet_outputs_out1_1.csv calc_and_transfer/output_RawPointSet_outputs_out2_ROM1PointSet_outputs_out2_0.csv calc_and_transfer/output_RawPointSet_outputs_out2_ROM1PointSet_outputs_out2_1.csv calc_and_transfer/PrintROM1PointSet.csv calc_and_transfer/PrintRawPointSet.csv'
   rel_err = 0.001
  [../]
 [./SimulationTags]
  # this just tests that there aren't errors on the Simulation tags, no expected output.
  type = 'RavenFramework'
  input = 'test_sim_tags.xml'
  output = 'SimulationTags/dump.csv'
 [../]
 [./testStratifiedLargeSize]
   type = 'RavenFramework'
   input = 'test_stratified_dummy_model_large_grid_size.xml'
   output = 'stratifiedLargeGridSize/reprint_16var.csv stratifiedLargeGridSize/reprint_16var.xml stratifiedLargeGridSize/reprint_16var2.csv stratifiedLargeGridSize/reprint_16var2.xml stratifiedLargeGridSize/reprint_2var.csv stratifiedLargeGridSize/reprint_2var.xml'
 [../]

 [./custom1D]
   type   = 'RavenFramework'
   input  = 'test_distributionCustom1D.xml'
   output = 'custom1D/PointSet2_dump.xml custom1D/PointSet3_dump.xml'
   csv    = 'custom1D/PointSet2_dump.csv custom1D/PointSet3_dump.csv'
 [../]

 [./newerDatabaseWithFilename]
   type   = 'RavenFramework'
   input  = 'test_new_database_with_filename.xml'
   output = 'GridTestHDF5WithFileName/DatabaseStorage/userSpecifiedFileName.h5'
 [../]

 [./testLimitSurfacePostProcessorWithRegressor]
  type = 'RavenFramework'
  input = 'test_LimitSurface_regressor_inverseWeight.xml'
  csv = 'limitSurfaceWithRegressor/LimitSurfaceNegative_dump.csv limitSurfaceWithRegressor/LimitSurfacePositiveNegative_dump.csv limitSurfaceWithRegressor/LimitSurfacePositive_dump.csv'
  max_time = 300
  rel_err = 0.0001
 [../]

  [./HDF5selective]
    type = 'RavenErrors'
    input = 'hdf5_selective.xml'
    expect_err = 'RuntimeError: the parameter square has not been found in'
  [../]
  [./HDF5location]
    type = 'RavenFramework'
    input = 'hdf5_location.xml'
    output = 'HDF5_location/hasSquare_0.csv'
    prereq = HDF5selective
  [../]
[]


