<?xml version="1.0" ?>
<Simulation verbosity="debug">
  <TestInfo>
    <name>framework/ensembleModelTests.testEnsembleModelLateralInsertions</name>
    <author>alfoa</author>
    <created>2016-12-13</created>
    <classesTested>Models.EnsembleModel, Models.ExternalModel, JobHandler.ParallelPython</classesTested>
    <description>
       Example of usage of the Ensemble Model capability in RAVEN, connecting multiple External Models.
       This test is aimed to check the functionality of assembling multiple Models, when multiple chains of Models are
       connected ``laterly''.
    </description>
    <revisions>
      <revision author="alfoa" date="2017-01-21">Adding this test description.</revision>
    </revisions>
  </TestInfo>
  <RunInfo>
    <WorkingDir>metaModelWithLateralInsertions</WorkingDir>
    <Sequence>testMetamodelHeatTransfer,dumpResults</Sequence>
    <batchSize>2</batchSize>
    <internalParallel>True</internalParallel>
  </RunInfo>

  <Distributions>
    <Uniform name="distA">
      <lowerBound>0</lowerBound>
      <upperBound>1</upperBound>
    </Uniform>
    <Uniform name="distB">
      <lowerBound>2</lowerBound>
      <upperBound>3</upperBound>
    </Uniform>
  </Distributions>

  <Models>
    <ExternalModel ModuleToLoad="alpha" name="Alpha" subType="">
      <variables>A,B,C</variables>
    </ExternalModel>
    <ExternalModel ModuleToLoad="beta" name="Beta" subType="">
      <variables>C,D</variables>
    </ExternalModel>
    <ExternalModel ModuleToLoad="gamma" name="Gamma" subType="">
      <variables>C,E</variables>
    </ExternalModel>
    <ExternalModel ModuleToLoad="delta" name="Delta" subType="">
      <variables>F,D</variables>
    </ExternalModel>
    <ExternalModel ModuleToLoad="epsilon" name="Epsilon" subType="">
      <variables>E,F,G</variables>
    </ExternalModel>

    <EnsembleModel name="testConfig" subType="">
      <Model class="Models" type="ExternalModel">
        Alpha
        <Input   class="DataObjects" type="PointSet"      >inputAlpha</Input>
        <TargetEvaluation class="DataObjects" type="PointSet">dataC</TargetEvaluation>
      </Model>
      <Model class="Models" type="ExternalModel">
        Beta
        <Input   class="DataObjects" type="PointSet"      >inputBeta</Input>
        <TargetEvaluation class="DataObjects" type="PointSet">dataD</TargetEvaluation>
      </Model>
      <Model class="Models" type="ExternalModel">
        Delta
        <Input   class="DataObjects" type="PointSet"      >inputDelta</Input>
        <TargetEvaluation class="DataObjects" type="PointSet">dataF</TargetEvaluation>
      </Model>
      <Model class="Models"  type="ExternalModel">
        Gamma
        <Input   class="DataObjects" type="PointSet"      >inputGamma</Input>
        <TargetEvaluation class="DataObjects" type="PointSet">dataE</TargetEvaluation>
      </Model>
      <Model class="Models" type="ExternalModel">
        Epsilon
        <Input            class="DataObjects" type="PointSet">inputEpsilon</Input>
        <TargetEvaluation class="DataObjects" type="PointSet">dataG</TargetEvaluation>
      </Model>
    </EnsembleModel>
  </Models>

  <Samplers>
    <Grid name="grid">
      <variable name="A">
        <distribution>distA</distribution>
        <grid construction="equal" steps="1" type="value">0 1</grid>
      </variable>
      <variable name="B">
        <distribution>distB</distribution>
        <grid construction="equal" steps="1" type="value">2 3</grid>
      </variable>
    </Grid>
  </Samplers>

  <Steps>
    <MultiRun name="testMetamodelHeatTransfer">
      <Input   class="DataObjects" type="PointSet"      >inputAlpha</Input>
      <Input   class="DataObjects" type="PointSet"      >inputBeta</Input>
      <Input   class="DataObjects" type="PointSet"      >inputGamma</Input>
      <Input   class="DataObjects" type="PointSet"      >inputDelta</Input>
      <Input   class="DataObjects" type="PointSet"      >inputEpsilon</Input>
      <Model   class="Models"      type="EnsembleModel" >testConfig</Model>
      <Sampler class="Samplers"    type="Grid"          >grid</Sampler>
      <Output  class="DataObjects" type="PointSet"      >metaModelData</Output>
    </MultiRun>
    <IOStep name="dumpResults" pauseAtEnd="True">
      <Input  class="DataObjects"  type="PointSet"      >metaModelData</Input>
      <Output class="OutStreams"   type="Plot"          >plotData</Output>
    </IOStep>
  </Steps>

  <OutStreams>  
    <Plot  name="plotData" overwrite="false" verbosity="debug">
      <plotSettings>
        <plot>
          <type>scatter</type>
          <x>metaModelData|Input|A</x>
          <y>metaModelData|Input|B</y>
          <z>metaModelData|Output|G</z>
        </plot>
        <xlabel>A</xlabel>
        <ylabel>B</ylabel>
        <zlabel>G</zlabel>
      </plotSettings>
      <actions>
        <how>png</how>
      </actions>
    </Plot> 
  </OutStreams>

  <DataObjects>
    <PointSet name="inputAlpha">
      <Input>A,B</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <PointSet name="inputBeta">
      <Input>C</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <PointSet name="inputDelta">
      <Input>D</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <PointSet name="inputGamma">
      <Input>C</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <PointSet name="inputEpsilon">
      <Input>E,F</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>

    <PointSet name="dataC">
      <Input>A,B</Input>
      <Output>C</Output>
    </PointSet>
    <PointSet name="dataD">
      <Input>C</Input>
      <Output>D</Output>
    </PointSet>
    <PointSet name="dataF">
      <Input>D</Input>
      <Output>F</Output>
    </PointSet>
    <PointSet name="dataE">
      <Input>C</Input>
      <Output>E</Output>
    </PointSet>
    <PointSet name="dataG">
      <Input>E,F</Input>
      <Output>G</Output>
    </PointSet>
    <PointSet name="metaModelData">
      <Input>A,B</Input>
      <Output>C,D,E,F,G</Output>
    </PointSet>
  </DataObjects>

</Simulation>
