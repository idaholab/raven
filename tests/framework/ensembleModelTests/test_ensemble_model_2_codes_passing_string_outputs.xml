<?xml version="1.0" ?>
<Simulation verbosity="debug">
  <TestInfo>
    <name>framework/ensembleModelTests.testEnsembleModelWith2CodesUsingVariablesToTransferStrings</name>
    <author>alfoa</author>
    <created>2024-05-14</created>
    <classesTested>Models.EnsembleModel, JobHandler.Thread</classesTested>
    <description>
       The main goal of this test is to show how to the ensemble model can be used to transfer string info
       from a model to the other using a RAVEN variable. In this test for example, the variable ``restart''
       is a string, containing a absolute path of a filename, that is generated by the code ``createRestart'' and
       then transferred by the EnsembleModel to the second code ``useRestart''.
    </description>
    <revisions>
        <revision author="alfoa" date="2024-05-14">
            Example on how to use current (May 2024) capabilities to transfer
            string variables from a model to the other
        </revision>
    </revisions>
  </TestInfo>
  
  <RunInfo>
    <JobName>testEnsembleModelWith2CodesUsingVariablesToTransferStrings</JobName>
    <Sequence>sample,write</Sequence>
    <WorkingDir>metaModelWith2CodesOnePassingStringToOther</WorkingDir>
  </RunInfo>

  <Files>
    <Input name="input_code_1.xml" type="input">input_code_1.xml</Input>
    <Input name="input_code_2.xml" type="input">input_code_2.xml</Input>
  </Files>

  <Models>
    <Code name="createRestart" subType="GenericCode">
      <executable>../../createRestart.py</executable>
      <clargs arg="python" type="prepend"/>
      <clargs arg="" extension=".xml" type="input"/>
      <outputFile>code_1_results.csv</outputFile>
      <prepend>python</prepend>
      <alias variable="Amodel1"           type="output">A</alias>
      <alias variable="Bmodel1"           type="output">B</alias>
      <alias variable="Cmodel1"           type="output">C</alias>
      <alias variable="restart"           type="output">restartFileName</alias>
    </Code>
    <Code name="useRestart" subType="GenericCode">
        <executable>../../useRestart.py</executable>
        <clargs arg="python" type="prepend"/>
        <clargs arg="" extension=".xml" type="input"/>
        <prepend>python</prepend>
        <outputFile>code_2_results.csv</outputFile>
        <alias variable="restart"           type="input">restartInModel2</alias>
        <alias variable="Amodel2"           type="output">A</alias>
        <alias variable="Bmodel2"           type="output">B</alias>
        <alias variable="Cmodel2"           type="output">C</alias>
        restartInModel2
    </Code>
    <EnsembleModel name="restartAndUse" subType="">
      <Model class="Models" type="Code">
          createRestart
        <Input class="Files" type="">input_code_1.xml</Input>
        <TargetEvaluation class="DataObjects" type="PointSet">Code1Data</TargetEvaluation>
      </Model>
      <Model class="Models" type="Code">
          useRestart
        <Input class="Files" type="">input_code_2.xml</Input>
        <TargetEvaluation class="DataObjects" type="PointSet">Code2Data</TargetEvaluation>
        <Output class="DataObjects" type="PointSet">responseModel2</Output>
      </Model>
    </EnsembleModel>
  </Models>

  <Distributions>
    <UniformDiscrete name="seed">
      <lowerBound>0</lowerBound>
      <upperBound>100</upperBound>
      <strategy>withReplacement</strategy>
    </UniformDiscrete>
    <UniformDiscrete name="multiplicationFactor">
      <lowerBound>1</lowerBound>
      <upperBound>5</upperBound>
      <strategy>withReplacement</strategy>
    </UniformDiscrete>
  </Distributions>

  <Samplers>
    <MonteCarlo name="mc">
      <samplerInit>
        <limit>2</limit>
      </samplerInit>
      <variable name="seed">
        <distribution>seed</distribution>
      </variable>
      <variable name="multiplicationFactor">
        <distribution>multiplicationFactor</distribution>
      </variable>
    </MonteCarlo>
  </Samplers>

  <Steps>
    <MultiRun name="sample" re-seeding="200286">
      <Input   class="Files"       type="">input_code_1.xml</Input>
      <Input   class="Files"       type="">input_code_2.xml</Input>
      <Model   class="Models"      type="EnsembleModel">restartAndUse</Model>
      <Sampler class="Samplers"    type="MonteCarlo">mc</Sampler>
      <Output  class="DataObjects" type="PointSet">finalResponsesNoPath</Output>
      <Output  class="DataObjects" type="PointSet">responseModel2</Output>
    </MultiRun>
    <IOStep name="write">
      <Input  class="DataObjects" type="PointSet">finalResponsesNoPath</Input>
      <Input  class="DataObjects" type="PointSet">responseModel2</Input>
      <Output class="OutStreams"  type="Print">finalResponsesNoPath</Output>
      <Output class="OutStreams"  type="Print">printResponseModel2</Output>
    </IOStep>
  </Steps>

  <OutStreams>
    <Print name="finalResponsesNoPath">
      <type>csv</type>
      <source>finalResponsesNoPath</source>
      <what>input,output</what>
    </Print>
    <Print name="printResponseModel2">
      <type>csv</type>
      <source>responseModel2</source>
      <what>input,output</what>
    </Print>
  </OutStreams>

  <DataObjects>
    <PointSet name="finalResponsesNoPath">
      <Input>multiplicationFactor,seed</Input>
      <Output>Amodel1,Bmodel1,Cmodel1,Amodel2,Bmodel2,Cmodel2</Output>
    </PointSet>
    <PointSet name="responseModel2">
        <Input>restart,multiplicationFactor</Input>
        <Output>Amodel2,Bmodel2,Cmodel2</Output>
    </PointSet>
    <!-- 
      following dataobjects are used in the ensemble model for
      identifying the connections and transfer the information.
      Note the variable 'restart' that is the string variable produced
      from first code and transferred to second code
    -->
    <PointSet name="Code1Data">
        <Input>multiplicationFactor,seed</Input>
        <Output>Amodel1,Bmodel1,Cmodel1,restart</Output>
    </PointSet>
    <PointSet name="Code2Data">
        <Input>restart,multiplicationFactor</Input>
        <Output>Amodel2,Bmodel2,Cmodel2</Output>
    </PointSet>
  </DataObjects>

</Simulation>
