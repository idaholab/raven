<?xml version="1.0" ?>
<Simulation verbosity="debug">
  <TestInfo>
    <name>framework/pca_sparseGrid/polyCorrelation</name>
    <author>wangc</author>
    <created>2015-11-23</created>
    <classesTested>Samplers.SparseGridCollocation,SupervisedLearning.GaussPolynomialROM</classesTested>
    <description>
      Tests the SparseGridCollocation sampler combined wit input reductions via PCA method,
      using correlated multivariate normal distributions.
    </description>
    <analytic>
      This test is analytic in mean and variance using the "tensor polynomial" analytic model
      documented in the analytic tests.
    </analytic>
    <revisions>
      <revision author='talbpaul' date='2019-01-09'>moving from ROM-file to ROM-dataobject</revision>
    </revisions>
  </TestInfo>

  <RunInfo>
    <WorkingDir>polyCorrelation</WorkingDir>
    <batchSize>1</batchSize>
    <Sequence>sample,train,stats,print</Sequence>
  </RunInfo>

  <DataObjects>
    <PointSet name="dummyIN">
      <Input>x1,x2,x3,x4,x5</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <PointSet name="collset">
      <Input>x1,x2,x3,x4,x5,y1,y2,y3,y4,y5</Input>
      <Output>ans</Output>
    </PointSet>
    <DataSet name="rom_stats"/>
  </DataObjects>

  <Distributions>
    <MultivariateNormal method="pca" name="MVNDist">
      <transformation>
        <rank>5</rank>
      </transformation>
      <mu>0.5 -0.4 0.3 -0.2 0.1</mu>
      <covariance type="abs">
            0.64     0.2     -0.002    0.03    -0.044
            0.2      0.49    0.001     -0.01   0.023
            -0.002   0.001   0.01      0.0015  -0.001
            0.03     -0.01   0.0015    0.16    0.08
            -0.044   0.023   -0.001    0.08    0.25
        </covariance>
    </MultivariateNormal>
  </Distributions>

  <Samplers>
    <SparseGridCollocation name="sc">
      <variable name="y1">
        <distribution dim="1">MVNDist</distribution>
      </variable>
      <variable name="y2">
        <distribution dim="2">MVNDist</distribution>
      </variable>
      <variable name="y3">
        <distribution dim="3">MVNDist</distribution>
      </variable>
      <variable name="y4">
        <distribution dim="4">MVNDist</distribution>
      </variable>
      <variable name="y5">
        <distribution dim="5">MVNDist</distribution>
      </variable>
      <variablesTransformation distribution="MVNDist">
        <latentVariables>y1,y2,y3,y4,y5</latentVariables>
        <manifestVariables>x1,x2,x3,x4,x5</manifestVariables>
        <method>pca</method>
      </variablesTransformation>
      <ROM class="Models" type="ROM">rom</ROM>
    </SparseGridCollocation>
  </Samplers>

  <Models>
    <ExternalModel ModuleToLoad="poly.py" name="poly" subType="">
      <variables>x1,x2,x3,x4,x5,ans</variables>
    </ExternalModel>
    <ROM name="rom" subType="GaussPolynomialRom">
      <Target>ans</Target>
      <Features>y1,y2,y3,y4,y5</Features>
      <IndexSet>TensorProduct</IndexSet>
      <PolynomialOrder>2</PolynomialOrder>
    </ROM>
  </Models>

  <Steps>
    <MultiRun name="sample" sleepTime="1e-4">
      <Input class="DataObjects" type="PointSet">dummyIN</Input>
      <Model class="Models" type="ExternalModel">poly</Model>
      <Sampler class="Samplers" type="SparseGridCollocation">sc</Sampler>
      <Output class="DataObjects" type="PointSet">collset</Output>
    </MultiRun>
    <IOStep name="print">
      <Input class="DataObjects" type="PointSet">collset</Input>
      <Input class="DataObjects" type="DataSet">rom_stats</Input>
      <Output class="OutStreams" type="Print">csv_database</Output>
      <Output class="OutStreams" type="Print">stats_td1</Output>
    </IOStep>
    <IOStep name="stats">
      <Input class="Models" type="ROM">rom</Input>
      <Output class="DataObjects" type="DataSet">rom_stats</Output>
    </IOStep>
    <RomTrainer name="train">
      <Input class="DataObjects" type="PointSet">collset</Input>
      <Output class="Models" type="ROM">rom</Output>
    </RomTrainer>
  </Steps>

  <OutStreams>
    <Print name="csv_database">
      <type>csv</type>
      <source>collset</source>
      <what>Input|x1,Input|x2,Input|x3,Input|x4,Input|x5,Output</what>
    </Print>
    <Print name="stats_td1">
      <type>csv</type>
      <source>rom_stats</source>
    </Print>
  </OutStreams>

</Simulation>
