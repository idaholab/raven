<?xml version="1.0" ?>
<Simulation verbosity="debug">
  <TestInfo>
    <name>framework/CodeInterfaceTests.RAVENrunningRAVEN_ROM</name>
    <author>alfoa</author>
    <created>2017-09-16</created>
    <classesTested>Models.Code.RAVEN</classesTested>
    <description>
       This test is aimed to check the functionality of the RAVEN code interface (RAVEN running RAVEN). It tests the MPI implementation of the
       SLAVE RAVEN runs. In this case, 3 simultaneous SLAVE RAVEN (batchSize=3) runs are going to be spawned, each of them using 2 processors (NumMPI=2).
       The NumMPI XML node MUST BE INPUTTED if the SLAVE RAVEN runs must run in multiple processors!
    </description>
  </TestInfo>
  <!-- RUNINFO -->
  <RunInfo>
    <WorkingDir>raven_running_raven_internal_models</WorkingDir>
    <Sequence>FirstMRun</Sequence>
    <!--<mode>mpi</mode>-->
    <batchSize>5</batchSize>
    <mode>mpi<runQSUB/></mode>
    <expectedTime>0:10:0</expectedTime>
    <clusterParameters>-P nst -j oe</clusterParameters>
  </RunInfo>

<Files>
    <Input name="test_rom_trainer.xml" type="raven" >test_rom_trainer.xml</Input>
    <Input name="ext_dataobjects.xml" type="ExternalXML" >ext_dataobjects.xml</Input>
</Files>

  <!-- STEPS -->
  <Steps>
    <MultiRun name="FirstMRun" re-seeding="1">
      <Input class="Files" type="raven">test_rom_trainer.xml</Input>
      <Input class="Files" type="raven">ext_dataobjects.xml</Input>
      <Model class="Models" type="Code">raven_running_rom</Model>
      <Sampler class="Samplers" type="MonteCarlo">MC_external</Sampler>
      <Output class="DataObjects" type="HistorySet">testPrintHistorySet</Output>
      <Output class="Databases" type="HDF5">test_external_db</Output>
      <Output class="OutStreams" type="Print">testPrintHistorySet_dump</Output>
      <Output class="DataObjects" type="PointSet">testPointSet</Output>
      <Output class="OutStreams" type="Print">testPointSet_dump</Output>
    </MultiRun>
  </Steps>

  <!-- MODELS -->
  <Models>
    <Code name="raven_running_rom" subType="RAVEN">
        <executable>%FRAMEWORK_DIR%/../raven_framework</executable>
        <outputExportOutStreams>outputMontecarloRom_dump,outputMontecarloRomHS_dump</outputExportOutStreams>
        <conversion>
          <module source="raven_running_raven_internal_models/testConversionModule.py">
            <variables>Models|ROM@subType:SciKitLearn@name:ROM1|C</variables>
          </module>
        </conversion>
        <alias variable="loss_factor" type="input">Models|ROM@subType:SciKitLearn@name:ROM1|C</alias>
        <alias variable="tollerance"  type="input">Models|ROM@subType:SciKitLearn@name:ROM1|tol</alias>
        <alias variable="DG1recoveryTime"  type="input">Samplers|Grid@name:gridRom|constant@name:DG1recoveryTime</alias>

    </Code>
  </Models>

  <!-- DISTRIBUTIONS -->
  <Distributions>
    <Normal name="C_distrib">
      <mean>4</mean>
      <sigma>0.1</sigma>
    </Normal>
    <Normal name="toll_distrib">
      <mean>0.0001</mean>
      <sigma>0.000001</sigma>
    </Normal>
    <Uniform name="DG1backup">
        <lowerBound>0</lowerBound>
        <upperBound>1000</upperBound>
    </Uniform>
  </Distributions>

  <!-- SAMPLERS -->
  <Samplers>
    <MonteCarlo name="MC_external">
      <samplerInit>
        <limit>5</limit>
      </samplerInit>
      <variable name="loss_factor">
        <distribution>C_distrib</distribution>
      </variable>
      <variable name="tollerance">
        <distribution>toll_distrib</distribution>
      </variable>
      <variable name="DG1recoveryTime">
          <distribution>DG1backup</distribution>
      </variable>
    </MonteCarlo>
  </Samplers>

  <!-- DATABASES -->
  <Databases>
    <HDF5 name="test_external_db" readMode="overwrite"/>
  </Databases>

  <!-- OUTSTREAMS -->
  <OutStreams>
    <Print name="testPrintHistorySet_dump">
      <type>csv</type>
      <source>testPrintHistorySet</source>
      <what>input,output</what>
    </Print>
    <Print name="testPointSet_dump">
      <type>csv</type>
      <source>testPointSet</source>
      <what>input,output</what>
    </Print>
  </OutStreams>

  <!-- DATA OBJECTS -->
  <DataObjects>
    <PointSet name="inputPlaceHolder">
      <Input>loss_factor,tollerance</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <PointSet name="testPointSet">
      <Input>loss_factor,DeltaTimeScramToAux,tollerance,DG1recoveryTime</Input>
      <Output>CladTempThreshold</Output>
    </PointSet>
    <HistorySet name="testPrintHistorySet">
      <Input>loss_factor,DeltaTimeScramToAux,tollerance,DG1recoveryTime</Input>
      <Output>CladTempThreshold</Output>
    </HistorySet>
  </DataObjects>

</Simulation>
